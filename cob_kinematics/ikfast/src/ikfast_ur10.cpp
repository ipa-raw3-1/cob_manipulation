/// autogenerated analytical inverse kinematics code from ikfast program part of OpenRAVE
/// \author Rosen Diankov
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///     http://www.apache.org/licenses/LICENSE-2.0
/// 
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// ikfast version 61 generated on 2013-04-23 15:53:19.356807
/// To compile with gcc:
///     gcc -lstdc++ ik.cpp
/// To compile without any main function as a shared object (might need -llapack):
///     gcc -fPIC -lstdc++ -DIKFAST_NO_MAIN -DIKFAST_CLIBRARY -shared -Wl,-soname,libik.so -o libik.so ik.cpp
#define IKFAST_HAS_LIBRARY
#include "ikfast.h" // found inside share/openrave-X.Y/python/ikfast.h
using namespace ikfast;

// check if the included ikfast version matches what this file was compiled with
#define IKFAST_COMPILE_ASSERT(x) extern int __dummy[(int)x]
IKFAST_COMPILE_ASSERT(IKFAST_VERSION==61);

#include <cmath>
#include <vector>
#include <limits>
#include <algorithm>
#include <complex>

#define IKFAST_STRINGIZE2(s) #s
#define IKFAST_STRINGIZE(s) IKFAST_STRINGIZE2(s)

#ifndef IKFAST_ASSERT
#include <stdexcept>
#include <sstream>
#include <iostream>

#ifdef _MSC_VER
#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __FUNCDNAME__
#endif
#endif

#ifndef __PRETTY_FUNCTION__
#define __PRETTY_FUNCTION__ __func__
#endif

#define IKFAST_ASSERT(b) { if( !(b) ) { std::stringstream ss; ss << "ikfast exception: " << __FILE__ << ":" << __LINE__ << ": " <<__PRETTY_FUNCTION__ << ": Assertion '" << #b << "' failed"; throw std::runtime_error(ss.str()); } }

#endif

#if defined(_MSC_VER)
#define IKFAST_ALIGNED16(x) __declspec(align(16)) x
#else
#define IKFAST_ALIGNED16(x) x __attribute((aligned(16)))
#endif

#define IK2PI  ((IkReal)6.28318530717959)
#define IKPI  ((IkReal)3.14159265358979)
#define IKPI_2  ((IkReal)1.57079632679490)

#ifdef _MSC_VER
#ifndef isnan
#define isnan _isnan
#endif
#endif // _MSC_VER

// lapack routines
extern "C" {
  void dgetrf_ (const int* m, const int* n, double* a, const int* lda, int* ipiv, int* info);
  void zgetrf_ (const int* m, const int* n, std::complex<double>* a, const int* lda, int* ipiv, int* info);
  void dgetri_(const int* n, const double* a, const int* lda, int* ipiv, double* work, const int* lwork, int* info);
  void dgesv_ (const int* n, const int* nrhs, double* a, const int* lda, int* ipiv, double* b, const int* ldb, int* info);
  void dgetrs_(const char *trans, const int *n, const int *nrhs, double *a, const int *lda, int *ipiv, double *b, const int *ldb, int *info);
  void dgeev_(const char *jobvl, const char *jobvr, const int *n, double *a, const int *lda, double *wr, double *wi,double *vl, const int *ldvl, double *vr, const int *ldvr, double *work, const int *lwork, int *info);
}

using namespace std; // necessary to get std math routines

#ifdef IKFAST_NAMESPACE
namespace IKFAST_NAMESPACE {
#endif

inline float IKabs(float f) { return fabsf(f); }
inline double IKabs(double f) { return fabs(f); }

inline float IKsqr(float f) { return f*f; }
inline double IKsqr(double f) { return f*f; }

inline float IKlog(float f) { return logf(f); }
inline double IKlog(double f) { return log(f); }

// allows asin and acos to exceed 1
#ifndef IKFAST_SINCOS_THRESH
#define IKFAST_SINCOS_THRESH ((IkReal)0.000001)
#endif

// used to check input to atan2 for degenerate cases
#ifndef IKFAST_ATAN2_MAGTHRESH
#define IKFAST_ATAN2_MAGTHRESH ((IkReal)2e-6)
#endif

// minimum distance of separate solutions
#ifndef IKFAST_SOLUTION_THRESH
#define IKFAST_SOLUTION_THRESH ((IkReal)1e-6)
#endif

inline float IKasin(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(-IKPI_2);
else if( f >= 1 ) return float(IKPI_2);
return asinf(f);
}
inline double IKasin(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return -IKPI_2;
else if( f >= 1 ) return IKPI_2;
return asin(f);
}

// return positive value in [0,y)
inline float IKfmod(float x, float y)
{
    while(x < 0) {
        x += y;
    }
    return fmodf(x,y);
}

// return positive value in [0,y)
inline double IKfmod(double x, double y)
{
    while(x < 0) {
        x += y;
    }
    return fmod(x,y);
}

inline float IKacos(float f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return float(IKPI);
else if( f >= 1 ) return float(0);
return acosf(f);
}
inline double IKacos(double f)
{
IKFAST_ASSERT( f > -1-IKFAST_SINCOS_THRESH && f < 1+IKFAST_SINCOS_THRESH ); // any more error implies something is wrong with the solver
if( f <= -1 ) return IKPI;
else if( f >= 1 ) return 0;
return acos(f);
}
inline float IKsin(float f) { return sinf(f); }
inline double IKsin(double f) { return sin(f); }
inline float IKcos(float f) { return cosf(f); }
inline double IKcos(double f) { return cos(f); }
inline float IKtan(float f) { return tanf(f); }
inline double IKtan(double f) { return tan(f); }
inline float IKsqrt(float f) { if( f <= 0.0f ) return 0.0f; return sqrtf(f); }
inline double IKsqrt(double f) { if( f <= 0.0 ) return 0.0; return sqrt(f); }
inline float IKatan2(float fy, float fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return float(IKPI_2);
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2f(fy,fx);
}
inline double IKatan2(double fy, double fx) {
    if( isnan(fy) ) {
        IKFAST_ASSERT(!isnan(fx)); // if both are nan, probably wrong value will be returned
        return IKPI_2;
    }
    else if( isnan(fx) ) {
        return 0;
    }
    return atan2(fy,fx);
}

inline float IKsign(float f) {
    if( f > 0 ) {
        return float(1);
    }
    else if( f < 0 ) {
        return float(-1);
    }
    return 0;
}

inline double IKsign(double f) {
    if( f > 0 ) {
        return 1.0;
    }
    else if( f < 0 ) {
        return -1.0;
    }
    return 0;
}

/// solves the forward kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API void ComputeFk(const IkReal* j, IkReal* eetrans, IkReal* eerot) {
IkReal x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19,x20,x21,x22,x23,x24,x25,x26,x27,x28,x29,x30,x31,x32,x33,x34,x35,x36,x37,x38,x39,x40,x41,x42,x43,x44,x45,x46,x47,x48,x49,x50,x51,x52,x53,x54,x55,x56;
x0=IKcos(j[0]);
x1=IKsin(j[0]);
x2=IKcos(j[1]);
x3=IKsin(j[1]);
x4=IKcos(j[2]);
x5=IKsin(j[2]);
x6=IKcos(j[4]);
x7=IKsin(j[4]);
x8=IKcos(j[3]);
x9=IKsin(j[3]);
x10=IKsin(j[5]);
x11=IKcos(j[5]);
x12=((IkReal(0.000832959835014659))*(x1));
x13=((IkReal(1.00000000000000))*(x9));
x14=((IkReal(1.00000000000000))*(x8));
x15=((IkReal(0.0337899647064003))*(x4));
x16=((IkReal(0.999428956097001))*(x5));
x17=((IkReal(0.999428956097001))*(x4));
x18=((IkReal(0.00381117011923489))*(x5));
x19=((IkReal(0.0337899647064003))*(x5));
x20=((IkReal(0.00381117011923489))*(x4));
x21=((IkReal(0.112725591958181))*(x4));
x22=((IkReal(-0.999428956097001))*(x4));
x23=((IkReal(-0.999428956097001))*(x5));
x24=((((IkReal(0.707102543863324))*(x1)))+(((IkReal(-0.707108981466304))*(x0))));
x25=((((IkReal(-0.000864037412481531))*(x1)))+(((IkReal(0.000864045278850941))*(x0))));
x26=((((IkReal(0.999387668812801))*(x3)))+(((IkReal(-0.00117999830033167))*(x2))));
x27=((((IkReal(-0.0349684756605290))*(x3)))+(((IkReal(0.00121999824271580))*(x2))));
x28=((((IkReal(0.000864037412481531))*(x0)))+(((IkReal(0.000864045278850941))*(x1))));
x29=((((IkReal(-0.707108981466304))*(x1)))+(((IkReal(-0.707102543863324))*(x0))));
x30=((((IkReal(0.00122193898950495))*(x3)))+(((IkReal(0.999998559603112))*(x2))));
x31=((IkReal(-1.00000000000000))*(x30));
x32=((IkReal(0.112725591958181))*(x26));
x33=((x2)*(x25));
x34=((x26)*(x5));
x35=((x24)*(x3));
x36=((x26)*(x4));
x37=((x15)*(x26));
x38=((x29)*(x3));
x39=((x31)*(x4));
x40=((x2)*(x28));
x41=((x30)*(x5));
x42=((x19)*(x30));
x43=((x37)+(x42));
x44=((((x3)*(((((IkReal(-0.000834388598130239))*(x0)))+(((IkReal(0.000834381001758723))*(x1)))))))+(((IkReal(-0.0247275773414677))*(x1)))+(((IkReal(-0.0247273522187076))*(x0)))+(((x2)*(((((IkReal(0.706670580809275))*(x1)))+(((IkReal(-0.706677014479576))*(x0))))))));
x45=((x33)+(x35)+(((IkReal(-0.000832967418447589))*(x1)))+(((IkReal(-0.000832959835014659))*(x0))));
x46=((((IkReal(-1.00000000000000))*(x35)))+(((IkReal(-1.00000000000000))*(x33)))+(((IkReal(0.000832967418447589))*(x1)))+(((IkReal(0.000832959835014659))*(x0))));
x47=((((x3)*(((((IkReal(-0.000834381001758723))*(x0)))+(((IkReal(-0.000834388598130239))*(x1)))))))+(((IkReal(0.0247275773414677))*(x0)))+(((x2)*(((((IkReal(-0.706670580809275))*(x0)))+(((IkReal(-0.706677014479576))*(x1)))))))+(((IkReal(-0.0247273522187076))*(x1))));
x48=((((IkReal(-1.00000000000000))*(x12)))+(((IkReal(0.000832967418447589))*(x0)))+(x38)+(x40));
x49=((((IkReal(-1.00000000000000))*(x38)))+(((IkReal(-1.00000000000000))*(x40)))+(x12)+(((IkReal(-0.000832967418447589))*(x0))));
x50=((((IkReal(-1.00000000000000))*(x17)*(x31)))+(((IkReal(-1.00000000000000))*(x16)*(x26)))+(x43));
x51=((((x19)*(x26)))+(((x16)*(x30)))+(((x15)*(x31)))+(((x17)*(x26))));
x52=((((x22)*(x26)))+(((x23)*(x30)))+(((IkReal(-0.0337899647064003))*(x39)))+(((IkReal(-0.0337899647064003))*(x34))));
x53=((x50)*(x8));
x54=((x51)*(x8));
x55=((x52)*(x9));
x56=((((x27)*(x7)))+(((x6)*(((((x50)*(x9)))+(x54))))));
eerot[0]=((((((((((((((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.0337899647064003))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.999428956097001))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000832484178379430))*(IKcos(j[0]))))+(((IkReal(-0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[5]))))+(((((((((((((((IkReal(0.0247265588238043))*(IKcos(j[0]))))+(((IkReal(-0.0247263337103169))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(-0.000862665103513256))*(IKsin(j[0]))))+(((IkReal(0.000862672957388891))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.706677016156164))*(IKsin(j[0]))))+(((IkReal(-0.706670582485847))*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((((((((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(-2.81459396709254e-5))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.0247132318149858))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5])))));
eerot[1]=((((x7)*(((((IkReal(-1.00000000000000))*(x14)*(((((x19)*(x44)))+(((x17)*(x44)))+(((x16)*(x46)))+(((x15)*(x45)))))))+(((IkReal(-1.00000000000000))*(x13)*(((((x19)*(x46)))+(((x23)*(x44)))+(((x22)*(x45)))+(((x15)*(x44)))))))))))+(((x6)*(((((x2)*(((((IkReal(-0.0247263337103169))*(x1)))+(((IkReal(0.0247265588238043))*(x0)))))))+(((IkReal(-0.706677016156164))*(x1)))+(((x3)*(((((IkReal(0.000862672957388891))*(x0)))+(((IkReal(-0.000862665103513256))*(x1)))))))+(((IkReal(-0.706670582485847))*(x0))))))));
eerot[2]=((((((((((((IkReal(-1.00000000000000))*(((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.0337899647064003))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.999428956097001))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000832484178379430))*(IKcos(j[0]))))+(((IkReal(-0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-1.00000000000000))*(((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5]))))+(((((((((((((((IkReal(0.0247265588238043))*(IKcos(j[0]))))+(((IkReal(-0.0247263337103169))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(-0.000862665103513256))*(IKsin(j[0]))))+(((IkReal(0.000862672957388891))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.706677016156164))*(IKsin(j[0]))))+(((IkReal(-0.706670582485847))*(IKcos(j[0]))))))*(IKsin(j[4]))))+(((((((((((((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKcos(j[0]))))+(((IkReal(0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(-2.81459396709254e-5))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-2.81456834269943e-5))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000835543965642978))*(IKsin(j[0]))))+(((IkReal(-0.000835536358752860))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.999428956097001))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.0247134568091909))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.0247132318149858))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.000832491757481887))*(IKsin(j[0]))))+(((IkReal(0.000832484178379430))*(IKcos(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5])))));
eetrans[0]=((((((((IkReal(-0.563827845582123))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.563827845582123))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.0139419697284243))*(IKcos(j[0]))))+(((IkReal(0.0139420966589051))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-0.109566358437595))*(IKcos(j[0]))))+(((((((((((IkReal(9.38958904794159e-5))*(IKcos(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(9.38967453263820e-5))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00278743079350864))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.00278740541641225))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.00381117011923489))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.00381117011923489))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-3.17455163373069e-6))*(IKcos(j[0]))))+(((IkReal(-3.17458053548368e-6))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.00381117011923489))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.00381117011923489))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-9.42410038848715e-5))*(IKsin(j[0]))))+(((IkReal(-9.42401459037351e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-0.000469650224983407))*(IKsin(j[0]))))+(((IkReal(-0.563827845582123))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000469645949232756))*(IKcos(j[0]))))+(((IkReal(-0.563827845582123))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(-9.72999970252601e-5))*(IKsin(j[0]))))+(((IkReal(9.73008828638930e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.109567355951635))*(IKsin(j[0]))))+(((((((IkReal(1.58785318653526e-5))*(IKsin(j[0]))))+(((IkReal(1.58783873053389e-5))*(IKcos(j[0]))))+(((IkReal(-0.0190626085891157))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.0190626085891157))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((((((IkReal(-0.00381117011923489))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(9.42401459037351e-5))*(IKcos(j[0]))))+(((IkReal(-0.00381117011923489))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(9.42410038848715e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.00278743079350864))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.00278740541641225))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-9.38967453263820e-5))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.000864037412481531))*(IKsin(j[0]))))+(((IkReal(0.000864045278850941))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-9.38958904794159e-5))*(IKcos(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.707108981466304))*(IKcos(j[0]))))+(((IkReal(0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.00381117011923489))*(((((IkReal(0.707108981466304))*(IKcos(j[0]))))+(((IkReal(-0.707102543863324))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.00381117011923489))*(((((IkReal(-0.000864045278850941))*(IKcos(j[0]))))+(((IkReal(0.000864037412481531))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-3.17455163373069e-6))*(IKcos(j[0]))))+(((IkReal(-3.17458053548368e-6))*(IKsin(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-0.425577350049871))*(IKsin(j[0]))))+(((IkReal(0.425581224591181))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(-0.0190626085891157))*(((((IkReal(0.000834381001758723))*(IKsin(j[0]))))+(((IkReal(-0.000834388598130239))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.000471367836790426))*(IKcos(j[0]))))+(((IkReal(0.000471372128217486))*(IKsin(j[0]))))+(((IkReal(-0.0190626085891157))*(((((IkReal(0.706670580809275))*(IKsin(j[0]))))+(((IkReal(-0.706677014479576))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.00278888317918664))*(IKsin(j[0]))))+(((IkReal(0.00278890856973688))*(IKcos(j[0]))))))*(IKcos(j[1])))));
eerot[3]=((((((((((((((((IkReal(0.000862672957388891))*(IKsin(j[0]))))+(((IkReal(0.000862665103513256))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.706677016156164))*(IKcos(j[0]))))+(((((((IkReal(0.0247265588238043))*(IKsin(j[0]))))+(((IkReal(0.0247263337103169))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.706670582485847))*(IKsin(j[0]))))))*(IKsin(j[4]))))+(((((((((((((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(-0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0247134568091909))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(-2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKcos(j[5]))))+(((((((((((((((IkReal(-0.999428956097001))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832491757481887))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.0337899647064003))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000835543965642978))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKsin(j[5])))));
eerot[4]=((((x7)*(((((IkReal(-1.00000000000000))*(x14)*(((((x19)*(x47)))+(((x17)*(x47)))+(((x16)*(x49)))+(((x15)*(x48)))))))+(((IkReal(-1.00000000000000))*(x13)*(((((x19)*(x49)))+(((x23)*(x47)))+(((x22)*(x48)))+(((x15)*(x47)))))))))))+(((x6)*(((((IkReal(0.706677016156164))*(x0)))+(((IkReal(-0.706670582485847))*(x1)))+(((x2)*(((((IkReal(0.0247263337103169))*(x0)))+(((IkReal(0.0247265588238043))*(x1)))))))+(((x3)*(((((IkReal(0.000862672957388891))*(x1)))+(((IkReal(0.000862665103513256))*(x0))))))))))));
eerot[5]=((((((((((((((((IkReal(0.000862672957388891))*(IKsin(j[0]))))+(((IkReal(0.000862665103513256))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.706677016156164))*(IKcos(j[0]))))+(((((((IkReal(0.0247265588238043))*(IKsin(j[0]))))+(((IkReal(0.0247263337103169))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.706670582485847))*(IKsin(j[0]))))))*(IKsin(j[4]))))+(((((((((((((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(-0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0247134568091909))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(0.999428956097001))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(-2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(2.81459396709254e-5))*(IKcos(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[4]))))))*(IKsin(j[5]))))+(((((((((((IkReal(-1.00000000000000))*(((((IkReal(-0.999428956097001))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000832491757481887))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(-0.0337899647064003))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000835543965642978))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((IkReal(-1.00000000000000))*(((((IkReal(-0.000832491757481887))*(IKcos(j[0]))))+(((IkReal(0.000832484178379430))*(IKsin(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0247132318149858))*(IKsin(j[0]))))+(((IkReal(-0.0247134568091909))*(IKcos(j[0]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.999428956097001))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0337899647064003))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000835543965642978))*(IKcos(j[0]))))+(((IkReal(-0.000835536358752860))*(IKsin(j[0]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))+(((IkReal(-1.00000000000000))*(((((IkReal(0.0337899647064003))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.0337899647064003))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(2.81456834269943e-5))*(IKsin(j[0]))))+(((IkReal(-2.81459396709254e-5))*(IKcos(j[0]))))))*(IKsin(j[2]))))))*(IKcos(j[3]))))))*(IKcos(j[5])))));
eetrans[1]=((((((((IkReal(0.00278890856973688))*(IKsin(j[0]))))+(((IkReal(0.00278888317918664))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.109567355951635))*(IKcos(j[0]))))+(((IkReal(-0.109566358437595))*(IKsin(j[0]))))+(((((((IkReal(9.73008828638930e-5))*(IKsin(j[0]))))+(((IkReal(9.72999970252601e-5))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((((((((((IkReal(-3.17455163373069e-6))*(IKsin(j[0]))))+(((IkReal(0.00381117011923489))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(0.00381117011923489))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(3.17458053548368e-6))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(0.00381117011923489))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-9.42401459037351e-5))*(IKsin(j[0]))))+(((IkReal(9.42410038848715e-5))*(IKcos(j[0]))))+(((IkReal(0.00381117011923489))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))+(((((((IkReal(0.112725591958181))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.00278740541641225))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.00278743079350864))*(IKcos(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(9.38958904794159e-5))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-9.38967453263820e-5))*(IKcos(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKsin(j[2]))))))*(IKsin(j[3]))))+(((((((((((IkReal(-3.17455163373069e-6))*(IKsin(j[0]))))+(((IkReal(-0.00381117011923489))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.00381117011923489))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(3.17458053548368e-6))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(0.112725591958181))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.00278740541641225))*(IKsin(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.00278743079350864))*(IKcos(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(0.112725591958181))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(9.38967453263820e-5))*(IKcos(j[0]))))+(((IkReal(0.112725591958181))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-9.38958904794159e-5))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.00381117011923489))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(9.42401459037351e-5))*(IKsin(j[0]))))+(((IkReal(-9.42410038848715e-5))*(IKcos(j[0]))))+(((IkReal(-0.00381117011923489))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))))*(IKcos(j[2]))))))*(IKcos(j[3]))))+(((((((IkReal(-0.0190626085891157))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000471372128217486))*(IKcos(j[0]))))+(((IkReal(-0.0190626085891157))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000471367836790426))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(-0.563827845582123))*(((((IkReal(-0.000834381001758723))*(IKcos(j[0]))))+(((IkReal(-0.000834388598130239))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.563827845582123))*(((((IkReal(-0.706677014479576))*(IKsin(j[0]))))+(((IkReal(-0.706670580809275))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((IkReal(-0.0139420966589051))*(IKcos(j[0]))))+(((IkReal(0.0139419697284243))*(IKsin(j[0]))))))*(IKcos(j[2]))))+(((((((IkReal(-0.563827845582123))*(((((IkReal(-0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(-0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))+(((IkReal(0.000469650224983407))*(IKcos(j[0]))))+(((IkReal(-0.563827845582123))*(((((IkReal(0.707108981466304))*(IKsin(j[0]))))+(((IkReal(0.707102543863324))*(IKcos(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-0.000469645949232756))*(IKsin(j[0]))))))*(IKsin(j[2]))))+(((((((IkReal(0.425581224591181))*(IKsin(j[0]))))+(((IkReal(0.425577350049871))*(IKcos(j[0]))))))*(IKcos(j[1]))))+(((((((IkReal(-0.0190626085891157))*(((((IkReal(-0.707102543863324))*(IKcos(j[0]))))+(((IkReal(-0.707108981466304))*(IKsin(j[0]))))))*(IKsin(j[1]))))+(((IkReal(-1.58785318653526e-5))*(IKcos(j[0]))))+(((IkReal(1.58783873053389e-5))*(IKsin(j[0]))))+(((IkReal(-0.0190626085891157))*(((((IkReal(0.000864037412481531))*(IKcos(j[0]))))+(((IkReal(0.000864045278850941))*(IKsin(j[0]))))))*(IKcos(j[1]))))))*(IKcos(j[2])))));
eerot[6]=((((x10)*(((x55)+(x53)))))+(((x11)*(x56))));
eerot[7]=((((x27)*(x6)))+(((x7)*(((((IkReal(-1.00000000000000))*(x13)*(((((x23)*(x26)))+(((x22)*(x31)))+(x43)))))+(((IkReal(-1.00000000000000))*(x14)*(x51))))))));
eerot[8]=((((x10)*(x56)))+(((x11)*(((((IkReal(-1.00000000000000))*(x53)))+(((IkReal(-1.00000000000000))*(x55))))))));
eetrans[2]=((IkReal(0.128000000000000))+(((IkReal(-0.563827845582123))*(x36)))+(((IkReal(-0.563827845582123))*(x41)))+(((x9)*(((((x18)*(x26)))+(((x20)*(x31)))+(((x21)*(x26)))+(((IkReal(0.112725591958181))*(x41)))))))+(((x8)*(((((IkReal(-1.00000000000000))*(x18)*(x30)))+(((x32)*(x5)))+(((x21)*(x31)))+(((IkReal(-1.00000000000000))*(x20)*(x26)))))))+(((IkReal(-0.0190626085891157))*(x34)))+(((IkReal(-0.0190626085891157))*(x39)))+(((IkReal(-0.605804094369751))*(x3)))+(((IkReal(0.000137603601795915))*(x2))));
}

IKFAST_API int GetNumFreeParameters() { return 0; }
IKFAST_API int* GetFreeParameters() { return NULL; }
IKFAST_API int GetNumJoints() { return 6; }

IKFAST_API int GetIkRealSize() { return sizeof(IkReal); }

IKFAST_API int GetIkType() { return 0x67000001; }

class IKSolver {
public:
IkReal j0,cj0,sj0,htj0,j1,cj1,sj1,htj1,j2,cj2,sj2,htj2,j3,cj3,sj3,htj3,j4,cj4,sj4,htj4,j5,cj5,sj5,htj5,new_r00,r00,rxp0_0,new_r01,r01,rxp0_1,new_r02,r02,rxp0_2,new_r10,r10,rxp1_0,new_r11,r11,rxp1_1,new_r12,r12,rxp1_2,new_r20,r20,rxp2_0,new_r21,r21,rxp2_1,new_r22,r22,rxp2_2,new_px,px,npx,new_py,py,npy,new_pz,pz,npz,pp;
unsigned char _ij0[2], _nj0,_ij1[2], _nj1,_ij2[2], _nj2,_ij3[2], _nj3,_ij4[2], _nj4,_ij5[2], _nj5;

bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
j0=numeric_limits<IkReal>::quiet_NaN(); _ij0[0] = -1; _ij0[1] = -1; _nj0 = -1; j1=numeric_limits<IkReal>::quiet_NaN(); _ij1[0] = -1; _ij1[1] = -1; _nj1 = -1; j2=numeric_limits<IkReal>::quiet_NaN(); _ij2[0] = -1; _ij2[1] = -1; _nj2 = -1; j3=numeric_limits<IkReal>::quiet_NaN(); _ij3[0] = -1; _ij3[1] = -1; _nj3 = -1; j4=numeric_limits<IkReal>::quiet_NaN(); _ij4[0] = -1; _ij4[1] = -1; _nj4 = -1; j5=numeric_limits<IkReal>::quiet_NaN(); _ij5[0] = -1; _ij5[1] = -1; _nj5 = -1; 
for(int dummyiter = 0; dummyiter < 1; ++dummyiter) {
    solutions.Clear();
r00 = eerot[0*3+0];
r01 = eerot[0*3+1];
r02 = eerot[0*3+2];
r10 = eerot[1*3+0];
r11 = eerot[1*3+1];
r12 = eerot[1*3+2];
r20 = eerot[2*3+0];
r21 = eerot[2*3+1];
r22 = eerot[2*3+2];
px = eetrans[0]; py = eetrans[1]; pz = eetrans[2];

new_r00=r00;
new_r01=((IkReal(-1.00000000000000))*(r02));
new_r02=r01;
new_px=px;
new_r10=r10;
new_r11=((IkReal(-1.00000000000000))*(r12));
new_r12=r11;
new_py=py;
new_r20=r20;
new_r21=((IkReal(-1.00000000000000))*(r22));
new_r22=r21;
new_pz=((IkReal(-0.128000000000000))+(pz));
r00 = new_r00; r01 = new_r01; r02 = new_r02; r10 = new_r10; r11 = new_r11; r12 = new_r12; r20 = new_r20; r21 = new_r21; r22 = new_r22; px = new_px; py = new_py; pz = new_pz;
pp=(((px)*(px))+((py)*(py))+((pz)*(pz)));
npx=((((px)*(r00)))+(((py)*(r10)))+(((pz)*(r20))));
npy=((((px)*(r01)))+(((py)*(r11)))+(((pz)*(r21))));
npz=((((px)*(r02)))+(((py)*(r12)))+(((pz)*(r22))));
rxp0_0=((((IkReal(-1.00000000000000))*(py)*(r20)))+(((pz)*(r10))));
rxp0_1=((((px)*(r20)))+(((IkReal(-1.00000000000000))*(pz)*(r00))));
rxp0_2=((((IkReal(-1.00000000000000))*(px)*(r10)))+(((py)*(r00))));
rxp1_0=((((IkReal(-1.00000000000000))*(py)*(r21)))+(((pz)*(r11))));
rxp1_1=((((px)*(r21)))+(((IkReal(-1.00000000000000))*(pz)*(r01))));
rxp1_2=((((IkReal(-1.00000000000000))*(px)*(r11)))+(((py)*(r01))));
rxp2_0=((((IkReal(-1.00000000000000))*(py)*(r22)))+(((pz)*(r12))));
rxp2_1=((((px)*(r22)))+(((IkReal(-1.00000000000000))*(pz)*(r02))));
rxp2_2=((((IkReal(-1.00000000000000))*(px)*(r12)))+(((py)*(r02))));
{
IkReal dummyeval[1];
dummyeval[0]=(((npx)*(npx))+((npy)*(npy)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=(((npx)*(npx))+((npy)*(npy)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(-0.225580000000000))*(npy))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.225580000000000))*(npx))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x57=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-0.225580000000000))*(npy)), ((IkReal(-0.225580000000000))*(npx)))));
if( (((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x58=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x57)))+(((IkReal(-1.00000000000000))*(x58))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(x58)+(((IkReal(-1.00000000000000))*(x57))));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
sj3array[0]=((IkReal(0.199929096871399))+(((IkReal(1.77257821501374))*(npx)*(sj5)))+(((IkReal(1.77257821501374))*(cj5)*(npy))));
if( sj3array[0] >= -1-IKFAST_SINCOS_THRESH && sj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKasin(sj3array[0]);
    cj3array[0] = IKcos(j3array[0]);
    sj3array[1] = sj3array[0];
    j3array[1] = j3array[0] > 0 ? (IKPI-j3array[0]) : (-IKPI-j3array[0]);
    cj3array[1] = -cj3array[0];
}
else if( isnan(sj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(((IkReal(127215841.000000))+(((IkReal(3182652225.00000))*((cj3)*(cj3))))));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(25.0177352127083))*((cj3)*(cj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(5.00177320684458))*(cj3)*(npz)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)))+(((npy)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x59=((cj5)*(npx));
IkReal x60=((IkReal(2000000000.00000))*(npz));
IkReal x61=((npy)*(sj5));
IkReal x62=((cj3)*(npz));
if( IKabs(((((IKabs(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62))))) != 0)?((IkReal)1/(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x60)*(x61)))+(((IkReal(-1.00000000000000))*(x59)*(x60))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz))))))))+IKsqr(((((IKabs(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62))))) != 0)?((IkReal)1/(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x60)*(x61)))+(((IkReal(-1.00000000000000))*(x59)*(x60)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x62)))+(((IkReal(-1127900000.00000))*(x59)))+(((IkReal(1127900000.00000))*(x61)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz))))))), ((((IKabs(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62))))) != 0)?((IkReal)1/(((((IkReal(225580000.000000))*(x61)))+(((IkReal(-225580000.000000))*(x59)))+(((IkReal(1128300000.00000))*(x62)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x60)*(x61)))+(((IkReal(-1.00000000000000))*(x59)*(x60)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x63=IKsin(j4);
IkReal x64=IKcos(j4);
IkReal x65=((npy)*(sj5));
IkReal x66=((IkReal(0.564150000000000))*(cj3));
IkReal x67=((cj5)*(npx));
IkReal x68=((IkReal(1.00000000000000))*(x63));
evalcond[0]=((npz)+(((IkReal(-0.112790000000000))*(x64)))+(((IkReal(-1.00000000000000))*(x63)*(x66))));
evalcond[1]=((IkReal(-0.112790000000000))+(((npz)*(x64)))+(((x63)*(x67)))+(((IkReal(-1.00000000000000))*(x65)*(x68))));
evalcond[2]=((x67)+(((IkReal(-0.112790000000000))*(x63)))+(((x64)*(x66)))+(((IkReal(-1.00000000000000))*(x65))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x64)*(x65)))+(x66)+(((IkReal(-1.00000000000000))*(npz)*(x68)))+(((x64)*(x67))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x623=((IkReal(5641500000.00000))*(cj3));
IkReal x624=((npy)*(sj5));
IkReal x625=((cj5)*(npx));
if( IKabs(((gconst0)*(((((IkReal(-1127900000.00000))*(x624)))+(((IkReal(1127900000.00000))*(x625)))+(((npz)*(x623))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((IkReal(-1.00000000000000))*(x623)*(x625)))+(((IkReal(1127900000.00000))*(npz)))+(((x623)*(x624))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((((IkReal(-1127900000.00000))*(x624)))+(((IkReal(1127900000.00000))*(x625)))+(((npz)*(x623)))))), ((gconst0)*(((((IkReal(-1.00000000000000))*(x623)*(x625)))+(((IkReal(1127900000.00000))*(npz)))+(((x623)*(x624)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x626=IKsin(j4);
IkReal x627=IKcos(j4);
IkReal x628=((npy)*(sj5));
IkReal x629=((IkReal(0.564150000000000))*(cj3));
IkReal x630=((cj5)*(npx));
IkReal x631=((IkReal(1.00000000000000))*(x626));
evalcond[0]=((((IkReal(-0.112790000000000))*(x627)))+(npz)+(((IkReal(-1.00000000000000))*(x626)*(x629))));
evalcond[1]=((IkReal(-0.112790000000000))+(((IkReal(-1.00000000000000))*(x628)*(x631)))+(((npz)*(x627)))+(((x626)*(x630))));
evalcond[2]=((((IkReal(-0.112790000000000))*(x626)))+(x630)+(((IkReal(-1.00000000000000))*(x628)))+(((x627)*(x629))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x627)*(x628)))+(((IkReal(-1.00000000000000))*(npz)*(x631)))+(x629)+(((x627)*(x630))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}

}

}

} else
{
{
IkReal j5array[2], cj5array[2], sj5array[2];
bool j5valid[2]={false};
_nj5 = 2;
if( IKabs(((IkReal(-0.225580000000000))*(npy))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((IkReal(-0.225580000000000))*(npx))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
IkReal x632=((IkReal(1.00000000000000))*(IKatan2(((IkReal(-0.225580000000000))*(npy)), ((IkReal(-0.225580000000000))*(npx)))));
if( (((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))) < (IkReal)-0.00001 )
    continue;
if( (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp))))))) < -1-IKFAST_SINCOS_THRESH || (((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp))))))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x633=IKasin(((((IKabs(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy)))))))) != 0)?((IkReal)1/(IKabs(IKsqrt(((((IkReal(0.0508863364000000))*((npx)*(npx))))+(((IkReal(0.0508863364000000))*((npy)*(npy))))))))):(IkReal)1.0e30))*(((IkReal(0.318265222500000))+(((IkReal(-1.00000000000000))*(pp)))))));
j5array[0]=((((IkReal(-1.00000000000000))*(x632)))+(((IkReal(-1.00000000000000))*(x633))));
sj5array[0]=IKsin(j5array[0]);
cj5array[0]=IKcos(j5array[0]);
j5array[1]=((IkReal(3.14159265358979))+(((IkReal(-1.00000000000000))*(x632)))+(x633));
sj5array[1]=IKsin(j5array[1]);
cj5array[1]=IKcos(j5array[1]);
if( j5array[0] > IKPI )
{
    j5array[0]-=IK2PI;
}
else if( j5array[0] < -IKPI )
{    j5array[0]+=IK2PI;
}
j5valid[0] = true;
if( j5array[1] > IKPI )
{
    j5array[1]-=IK2PI;
}
else if( j5array[1] < -IKPI )
{    j5array[1]+=IK2PI;
}
j5valid[1] = true;
for(int ij5 = 0; ij5 < 2; ++ij5)
{
if( !j5valid[ij5] )
{
    continue;
}
_ij5[0] = ij5; _ij5[1] = -1;
for(int iij5 = ij5+1; iij5 < 2; ++iij5)
{
if( j5valid[iij5] && IKabs(cj5array[ij5]-cj5array[iij5]) < IKFAST_SOLUTION_THRESH && IKabs(sj5array[ij5]-sj5array[iij5]) < IKFAST_SOLUTION_THRESH )
{
    j5valid[iij5]=false; _ij5[1] = iij5; break; 
}
}
j5 = j5array[ij5]; cj5 = cj5array[ij5]; sj5 = sj5array[ij5];

{
IkReal j3array[2], cj3array[2], sj3array[2];
bool j3valid[2]={false};
_nj3 = 2;
sj3array[0]=((IkReal(0.199929096871399))+(((IkReal(1.77257821501374))*(npx)*(sj5)))+(((IkReal(1.77257821501374))*(cj5)*(npy))));
if( sj3array[0] >= -1-IKFAST_SINCOS_THRESH && sj3array[0] <= 1+IKFAST_SINCOS_THRESH )
{
    j3valid[0] = j3valid[1] = true;
    j3array[0] = IKasin(sj3array[0]);
    cj3array[0] = IKcos(j3array[0]);
    sj3array[1] = sj3array[0];
    j3array[1] = j3array[0] > 0 ? (IKPI-j3array[0]) : (-IKPI-j3array[0]);
    cj3array[1] = -cj3array[0];
}
else if( isnan(sj3array[0]) )
{
    // probably any value will work
    j3valid[0] = true;
    cj3array[0] = 1; sj3array[0] = 0; j3array[0] = 0;
}
for(int ij3 = 0; ij3 < 2; ++ij3)
{
if( !j3valid[ij3] )
{
    continue;
}
_ij3[0] = ij3; _ij3[1] = -1;
for(int iij3 = ij3+1; iij3 < 2; ++iij3)
{
if( j3valid[iij3] && IKabs(cj3array[ij3]-cj3array[iij3]) < IKFAST_SOLUTION_THRESH && IKabs(sj3array[ij3]-sj3array[iij3]) < IKFAST_SOLUTION_THRESH )
{
    j3valid[iij3]=false; _ij3[1] = iij3; break; 
}
}
j3 = j3array[ij3]; cj3 = cj3array[ij3]; sj3 = sj3array[ij3];

{
IkReal dummyeval[1];
IkReal gconst0;
gconst0=IKsign(((IkReal(127215841.000000))+(((IkReal(3182652225.00000))*((cj3)*(cj3))))));
dummyeval[0]=((IkReal(1.00000000000000))+(((IkReal(25.0177352127083))*((cj3)*(cj3)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=((((IkReal(5.00177320684458))*(cj3)*(npz)))+(((IkReal(-1.00000000000000))*(cj5)*(npx)))+(((npy)*(sj5))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x634=((cj5)*(npx));
IkReal x635=((IkReal(2000000000.00000))*(npz));
IkReal x636=((npy)*(sj5));
IkReal x637=((cj3)*(npz));
if( IKabs(((((IKabs(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz)))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IKabs(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634))))) != 0)?((IkReal)1/(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x635)*(x636)))+(((IkReal(-1.00000000000000))*(x634)*(x635))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IKabs(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz))))))))+IKsqr(((((IKabs(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634))))) != 0)?((IkReal)1/(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x635)*(x636)))+(((IkReal(-1.00000000000000))*(x634)*(x635)))))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j4array[0]=IKatan2(((((IKabs(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636))))) != 0)?((IkReal)1/(((((IkReal(5641500000.00000))*(x637)))+(((IkReal(-1127900000.00000))*(x634)))+(((IkReal(1127900000.00000))*(x636)))))):(IkReal)1.0e30))*(((IkReal(-127215841.000000))+(((IkReal(10000000000.0000))*((npz)*(npz))))))), ((((IKabs(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634))))) != 0)?((IkReal)1/(((((IkReal(1128300000.00000))*(x637)))+(((IkReal(225580000.000000))*(x636)))+(((IkReal(-225580000.000000))*(x634)))))):(IkReal)1.0e30))*(((((IkReal(127260957.000000))*(cj3)))+(((x635)*(x636)))+(((IkReal(-1.00000000000000))*(x634)*(x635)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x638=IKsin(j4);
IkReal x639=IKcos(j4);
IkReal x640=((npy)*(sj5));
IkReal x641=((IkReal(0.564150000000000))*(cj3));
IkReal x642=((cj5)*(npx));
IkReal x643=((IkReal(1.00000000000000))*(x638));
evalcond[0]=((((IkReal(-0.112790000000000))*(x639)))+(npz)+(((IkReal(-1.00000000000000))*(x638)*(x641))));
evalcond[1]=((IkReal(-0.112790000000000))+(((x638)*(x642)))+(((IkReal(-1.00000000000000))*(x640)*(x643)))+(((npz)*(x639))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x640)))+(((x639)*(x641)))+(((IkReal(-0.112790000000000))*(x638)))+(x642));
evalcond[3]=((((IkReal(-1.00000000000000))*(npz)*(x643)))+(((x639)*(x642)))+(((IkReal(-1.00000000000000))*(x639)*(x640)))+(x641));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}

} else
{
{
IkReal j4array[1], cj4array[1], sj4array[1];
bool j4valid[1]={false};
_nj4 = 1;
IkReal x644=((IkReal(5641500000.00000))*(cj3));
IkReal x645=((npy)*(sj5));
IkReal x646=((cj5)*(npx));
if( IKabs(((gconst0)*(((((npz)*(x644)))+(((IkReal(-1127900000.00000))*(x645)))+(((IkReal(1127900000.00000))*(x646))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst0)*(((((x644)*(x645)))+(((IkReal(1127900000.00000))*(npz)))+(((IkReal(-1.00000000000000))*(x644)*(x646))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j4array[0]=IKatan2(((gconst0)*(((((npz)*(x644)))+(((IkReal(-1127900000.00000))*(x645)))+(((IkReal(1127900000.00000))*(x646)))))), ((gconst0)*(((((x644)*(x645)))+(((IkReal(1127900000.00000))*(npz)))+(((IkReal(-1.00000000000000))*(x644)*(x646)))))));
sj4array[0]=IKsin(j4array[0]);
cj4array[0]=IKcos(j4array[0]);
if( j4array[0] > IKPI )
{
    j4array[0]-=IK2PI;
}
else if( j4array[0] < -IKPI )
{    j4array[0]+=IK2PI;
}
j4valid[0] = true;
for(int ij4 = 0; ij4 < 1; ++ij4)
{
if( !j4valid[ij4] )
{
    continue;
}
_ij4[0] = ij4; _ij4[1] = -1;
for(int iij4 = ij4+1; iij4 < 1; ++iij4)
{
if( j4valid[iij4] && IKabs(cj4array[ij4]-cj4array[iij4]) < IKFAST_SOLUTION_THRESH && IKabs(sj4array[ij4]-sj4array[iij4]) < IKFAST_SOLUTION_THRESH )
{
    j4valid[iij4]=false; _ij4[1] = iij4; break; 
}
}
j4 = j4array[ij4]; cj4 = cj4array[ij4]; sj4 = sj4array[ij4];
{
IkReal evalcond[4];
IkReal x647=IKsin(j4);
IkReal x648=IKcos(j4);
IkReal x649=((npy)*(sj5));
IkReal x650=((IkReal(0.564150000000000))*(cj3));
IkReal x651=((cj5)*(npx));
IkReal x652=((IkReal(1.00000000000000))*(x647));
evalcond[0]=((npz)+(((IkReal(-1.00000000000000))*(x647)*(x650)))+(((IkReal(-0.112790000000000))*(x648))));
evalcond[1]=((IkReal(-0.112790000000000))+(((x647)*(x651)))+(((npz)*(x648)))+(((IkReal(-1.00000000000000))*(x649)*(x652))));
evalcond[2]=((((IkReal(-1.00000000000000))*(x649)))+(((x648)*(x650)))+(((IkReal(-0.112790000000000))*(x647)))+(x651));
evalcond[3]=((((x648)*(x651)))+(((IkReal(-1.00000000000000))*(x648)*(x649)))+(x650)+(((IkReal(-1.00000000000000))*(npz)*(x652))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  )
{
continue;
}
}

rotationfunction0(solutions);
}
}

}

}
}
}
}
}

}

}
}
return solutions.GetNumSolutions()>0;
}
inline void rotationfunction0(IkSolutionListBase<IkReal>& solutions) {
for(int rotationiter = 0; rotationiter < 1; ++rotationiter) {
IkReal x69=((IkReal(1.00000000000000))*(sj4));
IkReal x70=((cj5)*(sj4));
IkReal x71=((IkReal(1.00000000000000))*(sj5));
IkReal x72=((((IkReal(-0.999428956097000))*(sj3)))+(((IkReal(0.0337899647064003))*(cj3))));
IkReal x73=((IkReal(-1.00000000000000))*(sj5));
IkReal x74=((((IkReal(-0.0337899647064003))*(sj3)))+(((IkReal(-0.999428956097000))*(cj3))));
IkReal x75=((((IkReal(0.999428956097000))*(cj3)))+(((IkReal(0.0337899647064003))*(sj3))));
IkReal x76=((cj5)*(x72));
IkReal x77=((cj4)*(x72));
IkReal x78=((cj5)*(x74));
IkReal x79=((cj4)*(x75));
IkReal x80=((((cj4)*(x76)))+(((sj5)*(x74))));
IkReal x81=((((cj5)*(x79)))+(((sj5)*(x72))));
IkReal x82=((x78)+(((x73)*(x77))));
IkReal x83=((x76)+(((x73)*(x79))));
new_r00=((((r00)*(x80)))+(((r01)*(x82)))+(((IkReal(-1.00000000000000))*(r02)*(x69)*(x72))));
new_r01=((((r10)*(x80)))+(((r11)*(x82)))+(((IkReal(-1.00000000000000))*(r12)*(x69)*(x72))));
new_r02=((((IkReal(-1.00000000000000))*(r22)*(x69)*(x72)))+(((r20)*(x80)))+(((r21)*(((x78)+(((IkReal(-1.00000000000000))*(x71)*(x77))))))));
new_r10=((((r00)*(x81)))+(((r01)*(x83)))+(((IkReal(-1.00000000000000))*(r02)*(x69)*(x75))));
new_r11=((((r10)*(x81)))+(((r11)*(x83)))+(((IkReal(-1.00000000000000))*(r12)*(x69)*(x75))));
new_r12=((((IkReal(-1.00000000000000))*(r22)*(x69)*(x75)))+(((r21)*(((x76)+(((IkReal(-1.00000000000000))*(x71)*(x79)))))))+(((r20)*(x81))));
new_r20=((((IkReal(-1.00000000000000))*(r01)*(sj5)*(x69)))+(((r00)*(x70)))+(((cj4)*(r02))));
new_r21=((((r10)*(x70)))+(((IkReal(-1.00000000000000))*(r11)*(sj5)*(x69)))+(((cj4)*(r12))));
new_r22=((((cj4)*(r22)))+(((IkReal(-1.00000000000000))*(r21)*(sj5)*(x69)))+(((r20)*(x70))));
{
IkReal j1array[2], cj1array[2], sj1array[2];
bool j1valid[2]={false};
_nj1 = 2;
if( (((IkReal(28.5797974279289))*(new_r22))) < -1-IKFAST_SINCOS_THRESH || (((IkReal(28.5797974279289))*(new_r22))) > 1+IKFAST_SINCOS_THRESH )
    continue;
IkReal x84=IKasin(((IkReal(28.5797974279289))*(new_r22)));
j1array[0]=((IkReal(0.0348743713710381))+(((IkReal(-1.00000000000000))*(x84))));
sj1array[0]=IKsin(j1array[0]);
cj1array[0]=IKcos(j1array[0]);
j1array[1]=((IkReal(3.17646702496083))+(x84));
sj1array[1]=IKsin(j1array[1]);
cj1array[1]=IKcos(j1array[1]);
if( j1array[0] > IKPI )
{
    j1array[0]-=IK2PI;
}
else if( j1array[0] < -IKPI )
{    j1array[0]+=IK2PI;
}
j1valid[0] = true;
if( j1array[1] > IKPI )
{
    j1array[1]-=IK2PI;
}
else if( j1array[1] < -IKPI )
{    j1array[1]+=IK2PI;
}
j1valid[1] = true;
for(int ij1 = 0; ij1 < 2; ++ij1)
{
if( !j1valid[ij1] )
{
    continue;
}
_ij1[0] = ij1; _ij1[1] = -1;
for(int iij1 = ij1+1; iij1 < 2; ++iij1)
{
if( j1valid[iij1] && IKabs(cj1array[ij1]-cj1array[iij1]) < IKFAST_SOLUTION_THRESH && IKabs(sj1array[ij1]-sj1array[iij1]) < IKFAST_SOLUTION_THRESH )
{
    j1valid[iij1]=false; _ij1[1] = iij1; break; 
}
}
j1 = j1array[ij1]; cj1 = cj1array[ij1]; sj1 = sj1array[ij1];

{
IkReal dummyeval[1];
IkReal gconst2;
gconst2=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst3;
gconst3=IKsign(((((IkReal(2.27237797226308e+23))*((new_r12)*(new_r12))))+(((IkReal(2.27237797226308e+23))*((new_r02)*(new_r02))))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst1;
gconst1=IKsign(((IkReal(0.998775717314267))+(((IkReal(1.48839571222963e-6))*((sj1)*(sj1))))+(((IkReal(8.53229577125909e-5))*(cj1)*(sj1)))+(((IkReal(0.00122279429002101))*((cj1)*(cj1))))));
dummyeval[0]=((IkReal(671041.786204887))+(((IkReal(57.3254525066968))*(cj1)*(sj1)))+((sj1)*(sj1))+(((IkReal(821.551876274387))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x85=((new_r21)*(sj1));
IkReal x86=((new_r20)*(sj1));
IkReal x87=((IkReal(0.0247263337103169))*(cj1));
IkReal x88=((IkReal(0.0247265588238043))*(cj1));
if( IKabs(((gconst1)*(((((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((new_r21)*(x88)))+(((IkReal(0.000862672957388891))*(x85)))+(((IkReal(-0.000862665103513256))*(x86)))+(((IkReal(-1.00000000000000))*(new_r20)*(x87))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst1)*(((((IkReal(-0.706670582485847))*(new_r20)))+(((new_r21)*(x87)))+(((IkReal(0.000862665103513256))*(x85)))+(((IkReal(0.000862672957388891))*(x86)))+(((IkReal(0.706677016156165))*(new_r21)))+(((new_r20)*(x88))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst1)*(((((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((new_r21)*(x88)))+(((IkReal(0.000862672957388891))*(x85)))+(((IkReal(-0.000862665103513256))*(x86)))+(((IkReal(-1.00000000000000))*(new_r20)*(x87)))))), ((gconst1)*(((((IkReal(-0.706670582485847))*(new_r20)))+(((new_r21)*(x87)))+(((IkReal(0.000862665103513256))*(x85)))+(((IkReal(0.000862672957388891))*(x86)))+(((IkReal(0.706677016156165))*(new_r21)))+(((new_r20)*(x88)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[2];
IkReal x89=IKsin(j0);
IkReal x90=IKcos(j0);
IkReal x91=((cj1)*(x89));
IkReal x92=((sj1)*(x89));
IkReal x93=((cj1)*(x90));
IkReal x94=((sj1)*(x90));
evalcond[0]=((((IkReal(-0.0247265588238043))*(x93)))+(((IkReal(0.0247263337103169))*(x91)))+(((IkReal(-0.000862672957388891))*(x94)))+(((IkReal(0.706677016156165))*(x89)))+(((IkReal(0.000862665103513256))*(x92)))+(new_r20)+(((IkReal(0.706670582485847))*(x90))));
evalcond[1]=((((IkReal(-0.0247265588238043))*(x91)))+(((IkReal(-0.0247263337103169))*(x93)))+(((IkReal(-0.000862672957388891))*(x92)))+(((IkReal(-0.706677016156165))*(x90)))+(new_r21)+(((IkReal(-0.000862665103513256))*(x94)))+(((IkReal(0.706670582485847))*(x89))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst4;
gconst4=IKsign((((new_r12)*(new_r12))+((new_r02)*(new_r02))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst5;
gconst5=IKsign(((((IkReal(2.27237797226308e+23))*((new_r12)*(new_r12))))+(((IkReal(2.27237797226308e+23))*((new_r02)*(new_r02))))));
dummyeval[0]=(((new_r12)*(new_r12))+((new_r02)*(new_r02)));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x95=((new_r02)*(sj1));
IkReal x96=((cj1)*(new_r02));
IkReal x97=((new_r12)*(sj1));
IkReal x98=((IkReal(1.92785125738853e+26))*(new_r22));
IkReal x99=((cj1)*(new_r12));
if( IKabs(((gconst5)*(((((IkReal(-7.96004470945353e+21))*(x99)))+(((IkReal(2.27098652436155e+23))*(x95)))+(((IkReal(-2.68140214498156e+20))*(x96)))+(((IkReal(6.74167964783543e+24))*(x97)))+(((new_r12)*(x98))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst5)*(((((IkReal(-1.00000000000000))*(new_r02)*(x98)))+(((IkReal(2.27098652436155e+23))*(x97)))+(((IkReal(-2.68140214498156e+20))*(x99)))+(((IkReal(-6.74167964783543e+24))*(x95)))+(((IkReal(7.96004470945353e+21))*(x96))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst5)*(((((IkReal(-7.96004470945353e+21))*(x99)))+(((IkReal(2.27098652436155e+23))*(x95)))+(((IkReal(-2.68140214498156e+20))*(x96)))+(((IkReal(6.74167964783543e+24))*(x97)))+(((new_r12)*(x98)))))), ((gconst5)*(((((IkReal(-1.00000000000000))*(new_r02)*(x98)))+(((IkReal(2.27098652436155e+23))*(x97)))+(((IkReal(-2.68140214498156e+20))*(x99)))+(((IkReal(-6.74167964783543e+24))*(x95)))+(((IkReal(7.96004470945353e+21))*(x96)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[15];
IkReal x100=IKcos(j2);
IkReal x101=IKsin(j2);
IkReal x102=((IkReal(0.707103562373095))*(sj0));
IkReal x103=((IkReal(0.707109999985348))*(cj0));
IkReal x104=((IkReal(0.707103562373095))*(cj0));
IkReal x105=((IkReal(0.707109999985348))*(sj0));
IkReal x106=((IkReal(0.999998559603112))*(sj1));
IkReal x107=((IkReal(0.00121999824271580))*(cj1));
IkReal x108=((IkReal(0.0349684756605290))*(cj1));
IkReal x109=((sj0)*(sj1));
IkReal x110=((cj0)*(cj1));
IkReal x111=((IkReal(0.999387668812801))*(sj1));
IkReal x112=((IkReal(0.00122193898950495))*(sj1));
IkReal x113=((IkReal(0.00117999830033167))*(cj1));
IkReal x114=((IkReal(0.999998559603112))*(cj1));
IkReal x115=((IkReal(0.00122193898950495))*(cj1));
IkReal x116=((new_r21)*(sj1));
IkReal x117=((IkReal(0.00117999830033167))*(sj1));
IkReal x118=((IkReal(0.999387668812801))*(cj1));
IkReal x119=((IkReal(0.0349684756605290))*(sj1));
IkReal x120=((cj1)*(sj0));
IkReal x121=((cj0)*(sj1));
IkReal x122=((IkReal(0.00121999824271580))*(sj1));
IkReal x123=((new_r10)*(x101));
IkReal x124=((new_r00)*(x101));
IkReal x125=((IkReal(0.00117798845789884))*(x101));
IkReal x126=((new_r12)*(x100));
IkReal x127=((new_r02)*(x101));
IkReal x128=((new_r01)*(x101));
IkReal x129=((IkReal(0.0349699160554654))*(x100));
IkReal x130=((new_r12)*(x101));
IkReal x131=((new_r10)*(x100));
IkReal x132=((new_r00)*(x100));
IkReal x133=((new_r01)*(x100));
IkReal x134=((new_r11)*(x101));
IkReal x135=((new_r02)*(x100));
IkReal x136=((new_r11)*(x100));
IkReal x137=((x104)+(x105));
evalcond[0]=((((IkReal(-1.00000000000000))*(x111)))+(x126)+(x127)+(x113));
evalcond[1]=((x135)+(x112)+(x114)+(((IkReal(-1.00000000000000))*(x130))));
evalcond[2]=((((IkReal(0.0349699160554654))*(x126)))+(((IkReal(0.0349699160554654))*(x127)))+(((IkReal(0.00117798845789884))*(x135)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(-1.00000000000000))*(new_r12)*(x125))));
evalcond[3]=((((IkReal(0.0349699160554654))*(x124)))+(((IkReal(0.00117798845789884))*(x132)))+(((IkReal(0.999387671183844))*(new_r20)))+(x137)+(((IkReal(-0.00117798845789884))*(x123)))+(((new_r10)*(x129))));
evalcond[4]=((((IkReal(0.0349699160554654))*(x128)))+(((IkReal(-1.00000000000000))*(x103)))+(((IkReal(0.00117798845789884))*(x133)))+(((IkReal(0.999387671183844))*(new_r21)))+(x102)+(((new_r11)*(x129)))+(((IkReal(-1.00000000000000))*(new_r11)*(x125))));
evalcond[5]=((((IkReal(0.0247273522187076))*(cj0)))+(((IkReal(0.706677014479576))*(x110)))+(((IkReal(-0.706670580809274))*(x120)))+(x131)+(x124)+(((IkReal(0.0247275773414677))*(sj0)))+(((IkReal(-0.000834381001758723))*(x109)))+(((IkReal(0.000834388598130239))*(x121))));
evalcond[6]=((((IkReal(0.706677014479576))*(x120)))+(((IkReal(0.706670580809274))*(x110)))+(((IkReal(0.0247273522187076))*(sj0)))+(((IkReal(0.000834381001758723))*(x121)))+(x136)+(x128)+(((IkReal(-0.0247275773414677))*(cj0)))+(((IkReal(0.000834388598130239))*(x109))));
evalcond[7]=((((IkReal(0.000832967418447589))*(sj0)))+(((IkReal(0.000864037412481531))*(x120)))+(((IkReal(0.000832959835014659))*(cj0)))+(((IkReal(-0.000864045278850941))*(x110)))+(x132)+(((IkReal(-1.00000000000000))*(x123)))+(((IkReal(-0.707102543863324))*(x109)))+(((IkReal(0.707108981466304))*(x121))));
evalcond[8]=((((IkReal(0.000832959835014659))*(sj0)))+(((IkReal(-0.000864045278850941))*(x120)))+(((IkReal(-0.000864037412481531))*(x110)))+(x133)+(((IkReal(-0.000832967418447589))*(cj0)))+(((IkReal(0.707108981466304))*(x109)))+(((IkReal(-1.00000000000000))*(x134)))+(((IkReal(0.707102543863324))*(x121))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x118)*(x127)))+(((IkReal(-1.00000000000000))*(x118)*(x126)))+(((IkReal(-1.00000000000000))*(x115)*(x130)))+(((new_r22)*(x108)))+(((IkReal(-1.00000000000000))*(x106)*(x135)))+(((x106)*(x130)))+(((new_r22)*(x122)))+(((IkReal(-1.00000000000000))*(x117)*(x126)))+(((IkReal(-1.00000000000000))*(x117)*(x127)))+(((x115)*(x135))));
evalcond[10]=((((x112)*(x132)))+(((IkReal(-1.00000000000000))*(x111)*(x131)))+(((IkReal(-1.00000000000000))*(x112)*(x123)))+(((IkReal(-1.00000000000000))*(x111)*(x124)))+(((new_r20)*(x119)))+(((x114)*(x132)))+(((x113)*(x124)))+(((IkReal(-1.00000000000000))*(new_r20)*(x107)))+(((x113)*(x131)))+(((IkReal(-1.00000000000000))*(x114)*(x123))));
evalcond[11]=((((x112)*(x133)))+(((IkReal(-1.00000000000000))*(x112)*(x134)))+(((IkReal(-1.00000000000000))*(x111)*(x136)))+(((IkReal(-1.00000000000000))*(x111)*(x128)))+(((IkReal(0.0349684756605290))*(x116)))+(((x114)*(x133)))+(((x113)*(x128)))+(((x113)*(x136)))+(((IkReal(-1.00000000000000))*(new_r21)*(x107)))+(((IkReal(-1.00000000000000))*(x114)*(x134))));
evalcond[12]=((IkReal(1.00000000000000))+(((x112)*(x135)))+(((IkReal(-1.00000000000000))*(x112)*(x130)))+(((new_r22)*(x119)))+(((IkReal(-1.00000000000000))*(x111)*(x127)))+(((IkReal(-1.00000000000000))*(x111)*(x126)))+(((x114)*(x135)))+(((x113)*(x127)))+(((x113)*(x126)))+(((IkReal(-1.00000000000000))*(x114)*(x130)))+(((IkReal(-1.00000000000000))*(new_r22)*(x107))));
evalcond[13]=((((IkReal(-1.00000000000000))*(x118)*(x124)))+(((new_r20)*(x122)))+(((new_r20)*(x108)))+(((x106)*(x123)))+(((IkReal(-1.00000000000000))*(x115)*(x123)))+(((IkReal(-1.00000000000000))*(x103)))+(((IkReal(-1.00000000000000))*(x106)*(x132)))+(((IkReal(-1.00000000000000))*(x117)*(x131)))+(((IkReal(-1.00000000000000))*(x117)*(x124)))+(x102)+(((x115)*(x132)))+(((IkReal(-1.00000000000000))*(x118)*(x131))));
evalcond[14]=((((IkReal(-1.00000000000000))*(x118)*(x128)))+(((IkReal(-1.00000000000000))*(x115)*(x134)))+(((new_r21)*(x108)))+(((IkReal(-1.00000000000000))*(x106)*(x133)))+(((IkReal(-1.00000000000000))*(x117)*(x136)))+(((x106)*(x134)))+(((IkReal(-1.00000000000000))*(x117)*(x128)))+(((IkReal(-1.00000000000000))*(x137)))+(((x115)*(x133)))+(((IkReal(-1.00000000000000))*(x118)*(x136)))+(((IkReal(0.00121999824271580))*(x116))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x138=((new_r12)*(sj1));
IkReal x139=((new_r02)*(sj1));
IkReal x140=((cj1)*(new_r02));
IkReal x141=((cj1)*(new_r12));
if( IKabs(((gconst4)*(((((IkReal(0.999998559603112))*(x141)))+(((IkReal(0.00122193898950495))*(x138)))+(((IkReal(-0.00117999830033167))*(x140)))+(((IkReal(0.999387668812801))*(x139))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst4)*(((((IkReal(-0.00122193898950495))*(x139)))+(((IkReal(-0.00117999830033167))*(x141)))+(((IkReal(-0.999998559603112))*(x140)))+(((IkReal(0.999387668812801))*(x138))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst4)*(((((IkReal(0.999998559603112))*(x141)))+(((IkReal(0.00122193898950495))*(x138)))+(((IkReal(-0.00117999830033167))*(x140)))+(((IkReal(0.999387668812801))*(x139)))))), ((gconst4)*(((((IkReal(-0.00122193898950495))*(x139)))+(((IkReal(-0.00117999830033167))*(x141)))+(((IkReal(-0.999998559603112))*(x140)))+(((IkReal(0.999387668812801))*(x138)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[15];
IkReal x142=IKcos(j2);
IkReal x143=IKsin(j2);
IkReal x144=((IkReal(0.707103562373095))*(sj0));
IkReal x145=((IkReal(0.707109999985348))*(cj0));
IkReal x146=((IkReal(0.707103562373095))*(cj0));
IkReal x147=((IkReal(0.707109999985348))*(sj0));
IkReal x148=((IkReal(0.999998559603112))*(sj1));
IkReal x149=((IkReal(0.00121999824271580))*(cj1));
IkReal x150=((IkReal(0.0349684756605290))*(cj1));
IkReal x151=((sj0)*(sj1));
IkReal x152=((cj0)*(cj1));
IkReal x153=((IkReal(0.999387668812801))*(sj1));
IkReal x154=((IkReal(0.00122193898950495))*(sj1));
IkReal x155=((IkReal(0.00117999830033167))*(cj1));
IkReal x156=((IkReal(0.999998559603112))*(cj1));
IkReal x157=((IkReal(0.00122193898950495))*(cj1));
IkReal x158=((new_r21)*(sj1));
IkReal x159=((IkReal(0.00117999830033167))*(sj1));
IkReal x160=((IkReal(0.999387668812801))*(cj1));
IkReal x161=((IkReal(0.0349684756605290))*(sj1));
IkReal x162=((cj1)*(sj0));
IkReal x163=((cj0)*(sj1));
IkReal x164=((IkReal(0.00121999824271580))*(sj1));
IkReal x165=((new_r10)*(x143));
IkReal x166=((new_r00)*(x143));
IkReal x167=((IkReal(0.00117798845789884))*(x143));
IkReal x168=((new_r12)*(x142));
IkReal x169=((new_r02)*(x143));
IkReal x170=((new_r01)*(x143));
IkReal x171=((IkReal(0.0349699160554654))*(x142));
IkReal x172=((new_r12)*(x143));
IkReal x173=((new_r10)*(x142));
IkReal x174=((new_r00)*(x142));
IkReal x175=((new_r01)*(x142));
IkReal x176=((new_r11)*(x143));
IkReal x177=((new_r02)*(x142));
IkReal x178=((new_r11)*(x142));
IkReal x179=((x146)+(x147));
evalcond[0]=((((IkReal(-1.00000000000000))*(x153)))+(x168)+(x169)+(x155));
evalcond[1]=((((IkReal(-1.00000000000000))*(x172)))+(x177)+(x156)+(x154));
evalcond[2]=((((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(-1.00000000000000))*(new_r12)*(x167)))+(((IkReal(0.0349699160554654))*(x169)))+(((IkReal(0.0349699160554654))*(x168)))+(((IkReal(0.00117798845789884))*(x177))));
evalcond[3]=((((new_r10)*(x171)))+(((IkReal(-0.00117798845789884))*(x165)))+(((IkReal(0.999387671183844))*(new_r20)))+(x179)+(((IkReal(0.0349699160554654))*(x166)))+(((IkReal(0.00117798845789884))*(x174))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x145)))+(((new_r11)*(x171)))+(((IkReal(-1.00000000000000))*(new_r11)*(x167)))+(((IkReal(0.999387671183844))*(new_r21)))+(x144)+(((IkReal(0.0349699160554654))*(x170)))+(((IkReal(0.00117798845789884))*(x175))));
evalcond[5]=((((IkReal(0.0247273522187076))*(cj0)))+(((IkReal(-0.706670580809274))*(x162)))+(((IkReal(0.000834388598130239))*(x163)))+(x173)+(x166)+(((IkReal(-0.000834381001758723))*(x151)))+(((IkReal(0.706677014479576))*(x152)))+(((IkReal(0.0247275773414677))*(sj0))));
evalcond[6]=((((IkReal(0.000834388598130239))*(x151)))+(((IkReal(0.000834381001758723))*(x163)))+(((IkReal(0.0247273522187076))*(sj0)))+(((IkReal(0.706677014479576))*(x162)))+(x178)+(x170)+(((IkReal(-0.0247275773414677))*(cj0)))+(((IkReal(0.706670580809274))*(x152))));
evalcond[7]=((((IkReal(0.707108981466304))*(x163)))+(((IkReal(0.000832967418447589))*(sj0)))+(((IkReal(-0.707102543863324))*(x151)))+(((IkReal(0.000832959835014659))*(cj0)))+(x174)+(((IkReal(-1.00000000000000))*(x165)))+(((IkReal(-0.000864045278850941))*(x152)))+(((IkReal(0.000864037412481531))*(x162))));
evalcond[8]=((((IkReal(0.000832959835014659))*(sj0)))+(((IkReal(-1.00000000000000))*(x176)))+(((IkReal(-0.000864045278850941))*(x162)))+(x175)+(((IkReal(-0.000832967418447589))*(cj0)))+(((IkReal(-0.000864037412481531))*(x152)))+(((IkReal(0.707102543863324))*(x163)))+(((IkReal(0.707108981466304))*(x151))));
evalcond[9]=((((x157)*(x177)))+(((IkReal(-1.00000000000000))*(x159)*(x168)))+(((IkReal(-1.00000000000000))*(x159)*(x169)))+(((IkReal(-1.00000000000000))*(x160)*(x169)))+(((IkReal(-1.00000000000000))*(x160)*(x168)))+(((new_r22)*(x150)))+(((x148)*(x172)))+(((new_r22)*(x164)))+(((IkReal(-1.00000000000000))*(x148)*(x177)))+(((IkReal(-1.00000000000000))*(x157)*(x172))));
evalcond[10]=((((IkReal(-1.00000000000000))*(x154)*(x165)))+(((IkReal(-1.00000000000000))*(x153)*(x173)))+(((IkReal(-1.00000000000000))*(new_r20)*(x149)))+(((new_r20)*(x161)))+(((x156)*(x174)))+(((x155)*(x173)))+(((x155)*(x166)))+(((x154)*(x174)))+(((IkReal(-1.00000000000000))*(x156)*(x165)))+(((IkReal(-1.00000000000000))*(x153)*(x166))));
evalcond[11]=((((IkReal(-1.00000000000000))*(x154)*(x176)))+(((IkReal(0.0349684756605290))*(x158)))+(((IkReal(-1.00000000000000))*(x153)*(x170)))+(((IkReal(-1.00000000000000))*(x153)*(x178)))+(((IkReal(-1.00000000000000))*(new_r21)*(x149)))+(((x156)*(x175)))+(((x155)*(x178)))+(((x155)*(x170)))+(((x154)*(x175)))+(((IkReal(-1.00000000000000))*(x156)*(x176))));
evalcond[12]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x154)*(x172)))+(((IkReal(-1.00000000000000))*(new_r22)*(x149)))+(((x156)*(x177)))+(((new_r22)*(x161)))+(((x155)*(x169)))+(((x155)*(x168)))+(((x154)*(x177)))+(((IkReal(-1.00000000000000))*(x156)*(x172)))+(((IkReal(-1.00000000000000))*(x153)*(x169)))+(((IkReal(-1.00000000000000))*(x153)*(x168))));
evalcond[13]=((((IkReal(-1.00000000000000))*(x157)*(x165)))+(((IkReal(-1.00000000000000))*(x145)))+(((x157)*(x174)))+(((IkReal(-1.00000000000000))*(x159)*(x173)))+(((IkReal(-1.00000000000000))*(x159)*(x166)))+(((IkReal(-1.00000000000000))*(x160)*(x166)))+(((IkReal(-1.00000000000000))*(x160)*(x173)))+(((new_r20)*(x164)))+(x144)+(((x148)*(x165)))+(((new_r20)*(x150)))+(((IkReal(-1.00000000000000))*(x148)*(x174))));
evalcond[14]=((((x157)*(x175)))+(((IkReal(-1.00000000000000))*(x159)*(x178)))+(((IkReal(-1.00000000000000))*(x159)*(x170)))+(((new_r21)*(x150)))+(((IkReal(-1.00000000000000))*(x179)))+(((IkReal(-1.00000000000000))*(x160)*(x178)))+(((IkReal(-1.00000000000000))*(x160)*(x170)))+(((IkReal(0.00121999824271580))*(x158)))+(((x148)*(x176)))+(((IkReal(-1.00000000000000))*(x148)*(x175)))+(((IkReal(-1.00000000000000))*(x157)*(x176))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  || IKabs(evalcond[10]) > 0.000001  || IKabs(evalcond[11]) > 0.000001  || IKabs(evalcond[12]) > 0.000001  || IKabs(evalcond[13]) > 0.000001  || IKabs(evalcond[14]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x180=((new_r02)*(sj1));
IkReal x181=((cj1)*(new_r02));
IkReal x182=((new_r12)*(sj1));
IkReal x183=((IkReal(1.92785125738853e+26))*(new_r22));
IkReal x184=((cj1)*(new_r12));
if( IKabs(((gconst3)*(((((new_r12)*(x183)))+(((IkReal(2.27098652436155e+23))*(x180)))+(((IkReal(-2.68140214498156e+20))*(x181)))+(((IkReal(6.74167964783543e+24))*(x182)))+(((IkReal(-7.96004470945353e+21))*(x184))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst3)*(((((IkReal(2.27098652436155e+23))*(x182)))+(((IkReal(-6.74167964783543e+24))*(x180)))+(((IkReal(-2.68140214498156e+20))*(x184)))+(((IkReal(-1.00000000000000))*(new_r02)*(x183)))+(((IkReal(7.96004470945353e+21))*(x181))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst3)*(((((new_r12)*(x183)))+(((IkReal(2.27098652436155e+23))*(x180)))+(((IkReal(-2.68140214498156e+20))*(x181)))+(((IkReal(6.74167964783543e+24))*(x182)))+(((IkReal(-7.96004470945353e+21))*(x184)))))), ((gconst3)*(((((IkReal(2.27098652436155e+23))*(x182)))+(((IkReal(-6.74167964783543e+24))*(x180)))+(((IkReal(-2.68140214498156e+20))*(x184)))+(((IkReal(-1.00000000000000))*(new_r02)*(x183)))+(((IkReal(7.96004470945353e+21))*(x181)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[7];
IkReal x185=IKcos(j2);
IkReal x186=IKsin(j2);
IkReal x187=((IkReal(0.00122193898950495))*(sj1));
IkReal x188=((IkReal(0.00121999824271580))*(cj1));
IkReal x189=((IkReal(0.00122193898950495))*(cj1));
IkReal x190=((IkReal(0.0349684756605290))*(sj1));
IkReal x191=((IkReal(0.999387668812801))*(sj1));
IkReal x192=((IkReal(0.00117999830033167))*(sj1));
IkReal x193=((IkReal(0.999387668812801))*(cj1));
IkReal x194=((IkReal(0.00117999830033167))*(cj1));
IkReal x195=((IkReal(0.999998559603112))*(cj1));
IkReal x196=((new_r02)*(x185));
IkReal x197=((new_r11)*(x186));
IkReal x198=((new_r01)*(x185));
IkReal x199=((new_r12)*(x185));
IkReal x200=((new_r10)*(x185));
IkReal x201=((new_r00)*(x186));
IkReal x202=((new_r00)*(x185));
IkReal x203=((new_r02)*(x186));
IkReal x204=((new_r12)*(x186));
IkReal x205=((new_r11)*(x185));
IkReal x206=((new_r10)*(x186));
IkReal x207=((new_r01)*(x186));
IkReal x208=((IkReal(0.999998559603112))*(x204));
evalcond[0]=((((IkReal(-1.00000000000000))*(x191)))+(x199)+(x194)+(x203));
evalcond[1]=((x196)+(x195)+(x187)+(((IkReal(-1.00000000000000))*(x204))));
evalcond[2]=((((IkReal(-0.00117798845789884))*(x204)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(0.0349699160554654))*(x199)))+(((IkReal(0.0349699160554654))*(x203)))+(((IkReal(0.00117798845789884))*(x196))));
evalcond[3]=((((IkReal(-1.00000000000000))*(x189)*(x204)))+(((IkReal(-1.00000000000000))*(x192)*(x203)))+(((IkReal(-1.00000000000000))*(x192)*(x199)))+(((sj1)*(x208)))+(((IkReal(0.0349684756605290))*(cj1)*(new_r22)))+(((x189)*(x196)))+(((IkReal(0.00121999824271580))*(new_r22)*(sj1)))+(((IkReal(-0.999998559603112))*(sj1)*(x196)))+(((IkReal(-1.00000000000000))*(x193)*(x203)))+(((IkReal(-1.00000000000000))*(x193)*(x199))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x195)*(x206)))+(((IkReal(-1.00000000000000))*(x191)*(x201)))+(((IkReal(-1.00000000000000))*(x191)*(x200)))+(((x187)*(x202)))+(((IkReal(-1.00000000000000))*(x187)*(x206)))+(((x194)*(x200)))+(((x194)*(x201)))+(((x195)*(x202)))+(((IkReal(-1.00000000000000))*(new_r20)*(x188)))+(((new_r20)*(x190))));
evalcond[5]=((((IkReal(-1.00000000000000))*(x191)*(x207)))+(((IkReal(-1.00000000000000))*(x191)*(x205)))+(((IkReal(-1.00000000000000))*(x195)*(x197)))+(((x187)*(x198)))+(((x194)*(x207)))+(((x194)*(x205)))+(((IkReal(-1.00000000000000))*(new_r21)*(x188)))+(((new_r21)*(x190)))+(((IkReal(-1.00000000000000))*(x187)*(x197)))+(((x195)*(x198))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x195)*(x204)))+(((IkReal(-1.00000000000000))*(x191)*(x203)))+(((IkReal(-1.00000000000000))*(x187)*(x204)))+(((IkReal(-1.00000000000000))*(x191)*(x199)))+(((x187)*(x196)))+(((x194)*(x203)))+(((IkReal(-1.00000000000000))*(new_r22)*(x188)))+(((new_r22)*(x190)))+(((x195)*(x196)))+(((x194)*(x199))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(0.998775717314267))+(((IkReal(1.48839571222963e-6))*((sj1)*(sj1))))+(((IkReal(8.53229577125909e-5))*(cj1)*(sj1)))+(((IkReal(0.00122279429002101))*((cj1)*(cj1))))));
dummyeval[0]=((IkReal(671041.786204887))+(((IkReal(57.3254525066968))*(cj1)*(sj1)))+((sj1)*(sj1))+(((IkReal(821.551876274387))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-8626729.57424643))*(sj1)))+(((IkReal(-247265588.248290))*(cj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-28.6627262533484))*(cj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x209=((new_r12)*(sj2));
IkReal x210=((cj2)*(new_r02));
IkReal x211=((IkReal(0.0336460537878085))*(sj2));
IkReal x212=((new_r02)*(sj2));
IkReal x213=((IkReal(0.0336460537878085))*(cj2));
IkReal x214=((IkReal(0.998821134445359))*(cj2));
IkReal x215=((cj2)*(new_r12));
IkReal x216=((IkReal(0.998821134445359))*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.53592195542386))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0349897511218768))+(new_r22));
evalcond[2]=((IkReal(-0.998821134445359))+(x212)+(x215));
evalcond[3]=((IkReal(-0.0336460537878085))+(x210)+(((IkReal(-1.00000000000000))*(x209))));
evalcond[4]=((((IkReal(-0.00117798845789884))*(x209)))+(((IkReal(0.0349699160554654))*(x212)))+(((IkReal(0.0349699160554654))*(x215)))+(((IkReal(0.00117798845789884))*(x210)))+(((IkReal(0.999387671183844))*(new_r22))));
evalcond[5]=((((IkReal(9.13247223070096e-11))*(new_r22)))+(((IkReal(0.0336666688624906))*(x212)))+(((IkReal(0.0336666688624906))*(x215)))+(((IkReal(-0.999433116142086))*(x210)))+(((IkReal(0.999433116142086))*(x209))));
evalcond[6]=((((IkReal(-1.00000000000000))*(new_r10)*(x214)))+(((IkReal(0.0349897511218768))*(new_r20)))+(((IkReal(-1.00000000000000))*(new_r00)*(x216)))+(((IkReal(-1.00000000000000))*(new_r00)*(x213)))+(((new_r10)*(x211))));
evalcond[7]=((((IkReal(-1.00000000000000))*(new_r11)*(x214)))+(((IkReal(-1.00000000000000))*(new_r01)*(x213)))+(((IkReal(-1.00000000000000))*(new_r01)*(x216)))+(((IkReal(0.0349897511218768))*(new_r21)))+(((new_r11)*(x211))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(-0.0336460537878085))*(x210)))+(((IkReal(-1.00000000000000))*(new_r12)*(x214)))+(((IkReal(0.0336460537878085))*(x209)))+(((IkReal(-0.998821134445359))*(x212)))+(((IkReal(0.0349897511218768))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(335929.317709190);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x217=((cj2)*(new_r10));
IkReal x218=((new_r00)*(sj2));
if( IKabs(((((IkReal(-0.0263620447663619))*(new_r21)))+(((IkReal(-20.2205232310600))*(x217)))+(((IkReal(-20.2205232310600))*(x218))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-20.2203391373529))*(x217)))+(((IkReal(-20.2203391373529))*(x218)))+(((IkReal(1.38871181026863))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.0263620447663619))*(new_r21)))+(((IkReal(-20.2205232310600))*(x217)))+(((IkReal(-20.2205232310600))*(x218)))))+IKsqr(((((IkReal(-20.2203391373529))*(x217)))+(((IkReal(-20.2203391373529))*(x218)))+(((IkReal(1.38871181026863))*(new_r21)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.0263620447663619))*(new_r21)))+(((IkReal(-20.2205232310600))*(x217)))+(((IkReal(-20.2205232310600))*(x218)))), ((((IkReal(-20.2203391373529))*(x217)))+(((IkReal(-20.2203391373529))*(x218)))+(((IkReal(1.38871181026863))*(new_r21)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x219=IKsin(j0);
IkReal x220=IKcos(j0);
IkReal x221=((cj2)*(new_r01));
IkReal x222=((new_r01)*(sj2));
IkReal x223=((cj2)*(new_r10));
IkReal x224=((cj2)*(new_r11));
IkReal x225=((new_r10)*(sj2));
IkReal x226=((cj2)*(new_r00));
IkReal x227=((new_r11)*(sj2));
IkReal x228=((new_r00)*(sj2));
IkReal x229=((IkReal(0.707103562373095))*(x219));
IkReal x230=((IkReal(0.707109999985348))*(x220));
IkReal x231=((IkReal(0.707109999985348))*(x219));
IkReal x232=((IkReal(0.707103562373095))*(x220));
IkReal x233=((x232)+(x231));
evalcond[0]=((((IkReal(0.00117798845789884))*(x226)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(-0.00117798845789884))*(x225)))+(x233)+(((IkReal(0.0349699160554654))*(x228)))+(((IkReal(0.0349699160554654))*(x223))));
evalcond[1]=((((IkReal(0.00117798845789884))*(x221)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(-0.00117798845789884))*(x227)))+(((IkReal(-1.00000000000000))*(x230)))+(x229)+(((IkReal(0.0349699160554654))*(x224)))+(((IkReal(0.0349699160554654))*(x222))));
evalcond[2]=((((IkReal(0.706670582421271))*(x220)))+(((IkReal(0.706677016220741))*(x219)))+(new_r20));
evalcond[3]=((((IkReal(-0.706677016220741))*(x220)))+(((IkReal(0.706670582421271))*(x219)))+(new_r21));
evalcond[4]=((((IkReal(0.0485333988273702))*(x219)))+(((IkReal(0.000921313999845175))*(x220)))+(x228)+(x223));
evalcond[5]=((x222)+(x224)+(((IkReal(-0.0485333988273702))*(x220)))+(((IkReal(0.000921313999845175))*(x219))));
evalcond[6]=((((IkReal(-0.705869749359264))*(x219)))+(x226)+(((IkReal(0.707542110575601))*(x220)))+(((IkReal(-1.00000000000000))*(x225))));
evalcond[7]=((((IkReal(0.707542110575601))*(x219)))+(x221)+(((IkReal(0.705869749359264))*(x220)))+(((IkReal(-1.00000000000000))*(x227))));
evalcond[8]=((((IkReal(0.999433116142086))*(x225)))+(((IkReal(9.13247223070096e-11))*(new_r20)))+(((IkReal(-1.00000000000000))*(x230)))+(x229)+(((IkReal(-0.999433116142086))*(x226)))+(((IkReal(0.0336666688624906))*(x228)))+(((IkReal(0.0336666688624906))*(x223))));
evalcond[9]=((((IkReal(0.999433116142086))*(x227)))+(((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x233)))+(((IkReal(-0.999433116142086))*(x221)))+(((IkReal(0.0336666688624906))*(x222)))+(((IkReal(0.0336666688624906))*(x224))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x234=((cj2)*(new_r11));
IkReal x235=((new_r01)*(sj2));
if( IKabs(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x235)))+(((IkReal(-20.2203391373529))*(x234))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(20.2205232310600))*(x234)))+(((IkReal(20.2205232310600))*(x235)))+(((IkReal(-0.0263620447663618))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x235)))+(((IkReal(-20.2203391373529))*(x234)))))+IKsqr(((((IkReal(20.2205232310600))*(x234)))+(((IkReal(20.2205232310600))*(x235)))+(((IkReal(-0.0263620447663618))*(new_r20)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x235)))+(((IkReal(-20.2203391373529))*(x234)))), ((((IkReal(20.2205232310600))*(x234)))+(((IkReal(20.2205232310600))*(x235)))+(((IkReal(-0.0263620447663618))*(new_r20)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x236=IKsin(j0);
IkReal x237=IKcos(j0);
IkReal x238=((cj2)*(new_r01));
IkReal x239=((new_r01)*(sj2));
IkReal x240=((cj2)*(new_r10));
IkReal x241=((cj2)*(new_r11));
IkReal x242=((new_r10)*(sj2));
IkReal x243=((cj2)*(new_r00));
IkReal x244=((new_r11)*(sj2));
IkReal x245=((new_r00)*(sj2));
IkReal x246=((IkReal(0.707103562373095))*(x236));
IkReal x247=((IkReal(0.707109999985348))*(x237));
IkReal x248=((IkReal(0.707109999985348))*(x236));
IkReal x249=((IkReal(0.707103562373095))*(x237));
IkReal x250=((x249)+(x248));
evalcond[0]=((((IkReal(0.0349699160554654))*(x240)))+(((IkReal(0.0349699160554654))*(x245)))+(((IkReal(-0.00117798845789884))*(x242)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.00117798845789884))*(x243)))+(x250));
evalcond[1]=((((IkReal(0.0349699160554654))*(x241)))+(((IkReal(-0.00117798845789884))*(x244)))+(((IkReal(0.999387671183844))*(new_r21)))+(x246)+(((IkReal(0.0349699160554654))*(x239)))+(((IkReal(-1.00000000000000))*(x247)))+(((IkReal(0.00117798845789884))*(x238))));
evalcond[2]=((((IkReal(0.706670582421271))*(x237)))+(((IkReal(0.706677016220741))*(x236)))+(new_r20));
evalcond[3]=((((IkReal(0.706670582421271))*(x236)))+(((IkReal(-0.706677016220741))*(x237)))+(new_r21));
evalcond[4]=((((IkReal(0.000921313999845175))*(x237)))+(((IkReal(0.0485333988273702))*(x236)))+(x240)+(x245));
evalcond[5]=((((IkReal(0.000921313999845175))*(x236)))+(((IkReal(-0.0485333988273702))*(x237)))+(x239)+(x241));
evalcond[6]=((((IkReal(-1.00000000000000))*(x242)))+(x243)+(((IkReal(0.707542110575601))*(x237)))+(((IkReal(-0.705869749359264))*(x236))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x244)))+(x238)+(((IkReal(0.707542110575601))*(x236)))+(((IkReal(0.705869749359264))*(x237))));
evalcond[8]=((((IkReal(9.13247223070096e-11))*(new_r20)))+(((IkReal(0.0336666688624906))*(x240)))+(((IkReal(0.0336666688624906))*(x245)))+(x246)+(((IkReal(-0.999433116142086))*(x243)))+(((IkReal(0.999433116142086))*(x242)))+(((IkReal(-1.00000000000000))*(x247))));
evalcond[9]=((((IkReal(0.0336666688624906))*(x239)))+(((IkReal(-0.999433116142086))*(x238)))+(((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(0.0336666688624906))*(x241)))+(((IkReal(0.999433116142086))*(x244)))+(((IkReal(-1.00000000000000))*(x250))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20)))))+IKsqr(((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20)))), ((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x251=IKsin(j0);
IkReal x252=IKcos(j0);
IkReal x253=((cj2)*(new_r01));
IkReal x254=((new_r01)*(sj2));
IkReal x255=((cj2)*(new_r10));
IkReal x256=((cj2)*(new_r11));
IkReal x257=((new_r10)*(sj2));
IkReal x258=((cj2)*(new_r00));
IkReal x259=((new_r11)*(sj2));
IkReal x260=((new_r00)*(sj2));
IkReal x261=((IkReal(0.707103562373095))*(x251));
IkReal x262=((IkReal(0.707109999985348))*(x252));
IkReal x263=((IkReal(0.707109999985348))*(x251));
IkReal x264=((IkReal(0.707103562373095))*(x252));
IkReal x265=((x264)+(x263));
evalcond[0]=((((IkReal(0.0349699160554654))*(x260)))+(((IkReal(0.999387671183844))*(new_r20)))+(x265)+(((IkReal(-0.00117798845789884))*(x257)))+(((IkReal(0.00117798845789884))*(x258)))+(((IkReal(0.0349699160554654))*(x255))));
evalcond[1]=((((IkReal(0.999387671183844))*(new_r21)))+(x261)+(((IkReal(-0.00117798845789884))*(x259)))+(((IkReal(-1.00000000000000))*(x262)))+(((IkReal(0.00117798845789884))*(x253)))+(((IkReal(0.0349699160554654))*(x254)))+(((IkReal(0.0349699160554654))*(x256))));
evalcond[2]=((((IkReal(0.706677016220741))*(x251)))+(((IkReal(0.706670582421271))*(x252)))+(new_r20));
evalcond[3]=((((IkReal(0.706670582421271))*(x251)))+(((IkReal(-0.706677016220741))*(x252)))+(new_r21));
evalcond[4]=((((IkReal(0.000921313999845175))*(x252)))+(((IkReal(0.0485333988273702))*(x251)))+(x255)+(x260));
evalcond[5]=((((IkReal(0.000921313999845175))*(x251)))+(x254)+(x256)+(((IkReal(-0.0485333988273702))*(x252))));
evalcond[6]=((((IkReal(-0.705869749359264))*(x251)))+(x258)+(((IkReal(0.707542110575601))*(x252)))+(((IkReal(-1.00000000000000))*(x257))));
evalcond[7]=((x253)+(((IkReal(0.705869749359264))*(x252)))+(((IkReal(0.707542110575601))*(x251)))+(((IkReal(-1.00000000000000))*(x259))));
evalcond[8]=((((IkReal(0.0336666688624906))*(x255)))+(((IkReal(0.999433116142086))*(x257)))+(((IkReal(9.13247223070096e-11))*(new_r20)))+(x261)+(((IkReal(0.0336666688624906))*(x260)))+(((IkReal(-1.00000000000000))*(x262)))+(((IkReal(-0.999433116142086))*(x258))));
evalcond[9]=((((IkReal(0.0336666688624906))*(x254)))+(((IkReal(0.0336666688624906))*(x256)))+(((IkReal(0.999433116142086))*(x259)))+(((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x265)))+(((IkReal(-0.999433116142086))*(x253))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x266=((new_r12)*(sj2));
IkReal x267=((cj2)*(new_r02));
IkReal x268=((IkReal(0.0336460537878085))*(sj2));
IkReal x269=((new_r02)*(sj2));
IkReal x270=((IkReal(0.0336460537878085))*(cj2));
IkReal x271=((IkReal(0.998821134445359))*(cj2));
IkReal x272=((cj2)*(new_r12));
IkReal x273=((IkReal(0.998821134445359))*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-1.60567069816593))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0349897511218768))+(new_r22));
evalcond[2]=((IkReal(0.998821134445359))+(x269)+(x272));
evalcond[3]=((IkReal(0.0336460537878085))+(((IkReal(-1.00000000000000))*(x266)))+(x267));
evalcond[4]=((((IkReal(0.0349699160554654))*(x272)))+(((IkReal(0.0349699160554654))*(x269)))+(((IkReal(-0.00117798845789884))*(x266)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(0.00117798845789884))*(x267))));
evalcond[5]=((((IkReal(-0.0336666688624906))*(x272)))+(((IkReal(-0.0336666688624906))*(x269)))+(((IkReal(-0.999433116142086))*(x266)))+(((IkReal(0.999433116142086))*(x267)))+(((IkReal(-9.13247223070096e-11))*(new_r22))));
evalcond[6]=((((IkReal(-0.0349897511218768))*(new_r20)))+(((IkReal(-1.00000000000000))*(new_r10)*(x268)))+(((new_r00)*(x273)))+(((new_r00)*(x270)))+(((new_r10)*(x271))));
evalcond[7]=((((IkReal(-0.0349897511218768))*(new_r21)))+(((new_r01)*(x270)))+(((new_r01)*(x273)))+(((IkReal(-1.00000000000000))*(new_r11)*(x268)))+(((new_r11)*(x271))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(-0.0336460537878085))*(x266)))+(((IkReal(-0.0349897511218768))*(new_r22)))+(((IkReal(0.998821134445359))*(x269)))+(((IkReal(0.0336460537878085))*(x267)))+(((new_r12)*(x271))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(335929.317709190);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x274=((new_r00)*(sj2));
IkReal x275=((cj2)*(new_r10));
if( IKabs(((((IkReal(-20.2205232273645))*(x274)))+(((IkReal(-20.2205232273645))*(x275)))+(((IkReal(-1.38871157020684))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.0263746878177797))*(new_r21)))+(((IkReal(-20.2203391410484))*(x275)))+(((IkReal(-20.2203391410484))*(x274))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-20.2205232273645))*(x274)))+(((IkReal(-20.2205232273645))*(x275)))+(((IkReal(-1.38871157020684))*(new_r21)))))+IKsqr(((((IkReal(0.0263746878177797))*(new_r21)))+(((IkReal(-20.2203391410484))*(x275)))+(((IkReal(-20.2203391410484))*(x274)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-20.2205232273645))*(x274)))+(((IkReal(-20.2205232273645))*(x275)))+(((IkReal(-1.38871157020684))*(new_r21)))), ((((IkReal(0.0263746878177797))*(new_r21)))+(((IkReal(-20.2203391410484))*(x275)))+(((IkReal(-20.2203391410484))*(x274)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x276=IKsin(j0);
IkReal x277=IKcos(j0);
IkReal x278=((cj2)*(new_r01));
IkReal x279=((new_r01)*(sj2));
IkReal x280=((new_r11)*(sj2));
IkReal x281=((IkReal(0.0349699160554654))*(cj2));
IkReal x282=((new_r10)*(sj2));
IkReal x283=((cj2)*(new_r00));
IkReal x284=((cj2)*(new_r10));
IkReal x285=((new_r00)*(sj2));
IkReal x286=((cj2)*(new_r11));
IkReal x287=((IkReal(0.707103562373095))*(x276));
IkReal x288=((IkReal(0.707109999985348))*(x277));
IkReal x289=((IkReal(0.707109999985348))*(x276));
IkReal x290=((IkReal(0.707103562373095))*(x277));
IkReal x291=((x290)+(x289));
evalcond[0]=((((IkReal(0.0349699160554654))*(x285)))+(((IkReal(-0.00117798845789884))*(x282)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.00117798845789884))*(x283)))+(x291)+(((new_r10)*(x281))));
evalcond[1]=((((IkReal(0.0349699160554654))*(x279)))+(((IkReal(-0.00117798845789884))*(x280)))+(((IkReal(0.999387671183844))*(new_r21)))+(x287)+(((IkReal(0.00117798845789884))*(x278)))+(((IkReal(-1.00000000000000))*(x288)))+(((new_r11)*(x281))));
evalcond[2]=((((IkReal(0.706670582550424))*(x277)))+(new_r20)+(((IkReal(0.706677016091588))*(x276))));
evalcond[3]=((((IkReal(0.706670582550424))*(x276)))+(((IkReal(-0.706677016091588))*(x277)))+(new_r21));
evalcond[4]=((x285)+(x284)+(((IkReal(0.000921755855565219))*(x276)))+(((IkReal(0.0485333904375701))*(x277))));
evalcond[5]=((((IkReal(-0.000921755855565219))*(x277)))+(x279)+(x286)+(((IkReal(0.0485333904375701))*(x276))));
evalcond[6]=((((IkReal(0.707535684196160))*(x276)))+(x283)+(((IkReal(-1.00000000000000))*(x282)))+(((IkReal(-0.705876190905572))*(x277))));
evalcond[7]=((x278)+(((IkReal(-0.707535684196160))*(x277)))+(((IkReal(-1.00000000000000))*(x280)))+(((IkReal(-0.705876190905572))*(x276))));
evalcond[8]=((((IkReal(0.999433116142086))*(x283)))+(x287)+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(((IkReal(-0.999433116142086))*(x282)))+(((IkReal(-1.00000000000000))*(x288)))+(((IkReal(-0.0336666688624906))*(x285)))+(((IkReal(-0.0336666688624906))*(x284))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x291)))+(((IkReal(-0.0336666688624906))*(x279)))+(((IkReal(-9.13247223070096e-11))*(new_r21)))+(((IkReal(-0.999433116142086))*(x280)))+(((IkReal(0.999433116142086))*(x278)))+(((IkReal(-0.0336666688624906))*(x286))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x292=((new_r01)*(sj2));
IkReal x293=((cj2)*(new_r11));
if( IKabs(((((IkReal(-0.0263746878177797))*(new_r20)))+(((IkReal(-20.2203391410484))*(x293)))+(((IkReal(-20.2203391410484))*(x292))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(20.2205232273645))*(x292)))+(((IkReal(20.2205232273645))*(x293)))+(((IkReal(-1.38871157020684))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.0263746878177797))*(new_r20)))+(((IkReal(-20.2203391410484))*(x293)))+(((IkReal(-20.2203391410484))*(x292)))))+IKsqr(((((IkReal(20.2205232273645))*(x292)))+(((IkReal(20.2205232273645))*(x293)))+(((IkReal(-1.38871157020684))*(new_r20)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.0263746878177797))*(new_r20)))+(((IkReal(-20.2203391410484))*(x293)))+(((IkReal(-20.2203391410484))*(x292)))), ((((IkReal(20.2205232273645))*(x292)))+(((IkReal(20.2205232273645))*(x293)))+(((IkReal(-1.38871157020684))*(new_r20)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x294=IKsin(j0);
IkReal x295=IKcos(j0);
IkReal x296=((cj2)*(new_r01));
IkReal x297=((new_r01)*(sj2));
IkReal x298=((new_r11)*(sj2));
IkReal x299=((IkReal(0.0349699160554654))*(cj2));
IkReal x300=((new_r10)*(sj2));
IkReal x301=((cj2)*(new_r00));
IkReal x302=((cj2)*(new_r10));
IkReal x303=((new_r00)*(sj2));
IkReal x304=((cj2)*(new_r11));
IkReal x305=((IkReal(0.707103562373095))*(x294));
IkReal x306=((IkReal(0.707109999985348))*(x295));
IkReal x307=((IkReal(0.707109999985348))*(x294));
IkReal x308=((IkReal(0.707103562373095))*(x295));
IkReal x309=((x308)+(x307));
evalcond[0]=((((new_r10)*(x299)))+(((IkReal(0.999387671183844))*(new_r20)))+(x309)+(((IkReal(0.00117798845789884))*(x301)))+(((IkReal(0.0349699160554654))*(x303)))+(((IkReal(-0.00117798845789884))*(x300))));
evalcond[1]=((((new_r11)*(x299)))+(((IkReal(0.999387671183844))*(new_r21)))+(x305)+(((IkReal(0.0349699160554654))*(x297)))+(((IkReal(-0.00117798845789884))*(x298)))+(((IkReal(-1.00000000000000))*(x306)))+(((IkReal(0.00117798845789884))*(x296))));
evalcond[2]=((((IkReal(0.706677016091588))*(x294)))+(((IkReal(0.706670582550424))*(x295)))+(new_r20));
evalcond[3]=((((IkReal(-0.706677016091588))*(x295)))+(((IkReal(0.706670582550424))*(x294)))+(new_r21));
evalcond[4]=((((IkReal(0.000921755855565219))*(x294)))+(x302)+(x303)+(((IkReal(0.0485333904375701))*(x295))));
evalcond[5]=((((IkReal(-0.000921755855565219))*(x295)))+(x304)+(x297)+(((IkReal(0.0485333904375701))*(x294))));
evalcond[6]=((((IkReal(-0.705876190905572))*(x295)))+(((IkReal(-1.00000000000000))*(x300)))+(x301)+(((IkReal(0.707535684196160))*(x294))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x298)))+(((IkReal(-0.707535684196160))*(x295)))+(((IkReal(-0.705876190905572))*(x294)))+(x296));
evalcond[8]=((((IkReal(-0.0336666688624906))*(x303)))+(((IkReal(-0.0336666688624906))*(x302)))+(x305)+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(((IkReal(0.999433116142086))*(x301)))+(((IkReal(-1.00000000000000))*(x306)))+(((IkReal(-0.999433116142086))*(x300))));
evalcond[9]=((((IkReal(-0.0336666688624906))*(x304)))+(((IkReal(0.999433116142086))*(x296)))+(((IkReal(-0.999433116142086))*(x298)))+(((IkReal(-0.0336666688624906))*(x297)))+(((IkReal(-9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x309))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21)))))+IKsqr(((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21)))), ((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x310=IKsin(j0);
IkReal x311=IKcos(j0);
IkReal x312=((cj2)*(new_r01));
IkReal x313=((new_r01)*(sj2));
IkReal x314=((new_r11)*(sj2));
IkReal x315=((IkReal(0.0349699160554654))*(cj2));
IkReal x316=((new_r10)*(sj2));
IkReal x317=((cj2)*(new_r00));
IkReal x318=((cj2)*(new_r10));
IkReal x319=((new_r00)*(sj2));
IkReal x320=((cj2)*(new_r11));
IkReal x321=((IkReal(0.707103562373095))*(x310));
IkReal x322=((IkReal(0.707109999985348))*(x311));
IkReal x323=((IkReal(0.707109999985348))*(x310));
IkReal x324=((IkReal(0.707103562373095))*(x311));
IkReal x325=((x324)+(x323));
evalcond[0]=((((IkReal(-0.00117798845789884))*(x316)))+(((IkReal(0.999387671183844))*(new_r20)))+(x325)+(((IkReal(0.0349699160554654))*(x319)))+(((new_r10)*(x315)))+(((IkReal(0.00117798845789884))*(x317))));
evalcond[1]=((((IkReal(-0.00117798845789884))*(x314)))+(((IkReal(-1.00000000000000))*(x322)))+(((IkReal(0.999387671183844))*(new_r21)))+(x321)+(((IkReal(0.0349699160554654))*(x313)))+(((new_r11)*(x315)))+(((IkReal(0.00117798845789884))*(x312))));
evalcond[2]=((((IkReal(0.706670582550424))*(x311)))+(new_r20)+(((IkReal(0.706677016091588))*(x310))));
evalcond[3]=((((IkReal(0.706670582550424))*(x310)))+(((IkReal(-0.706677016091588))*(x311)))+(new_r21));
evalcond[4]=((((IkReal(0.0485333904375701))*(x311)))+(x319)+(x318)+(((IkReal(0.000921755855565219))*(x310))));
evalcond[5]=((((IkReal(0.0485333904375701))*(x310)))+(x320)+(x313)+(((IkReal(-0.000921755855565219))*(x311))));
evalcond[6]=((((IkReal(0.707535684196160))*(x310)))+(((IkReal(-0.705876190905572))*(x311)))+(x317)+(((IkReal(-1.00000000000000))*(x316))));
evalcond[7]=((((IkReal(-0.707535684196160))*(x311)))+(((IkReal(-0.705876190905572))*(x310)))+(x312)+(((IkReal(-1.00000000000000))*(x314))));
evalcond[8]=((((IkReal(-0.999433116142086))*(x316)))+(((IkReal(-1.00000000000000))*(x322)))+(x321)+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(((IkReal(0.999433116142086))*(x317)))+(((IkReal(-0.0336666688624906))*(x318)))+(((IkReal(-0.0336666688624906))*(x319))));
evalcond[9]=((((IkReal(-0.0336666688624906))*(x320)))+(((IkReal(-0.999433116142086))*(x314)))+(((IkReal(-1.00000000000000))*(x325)))+(((IkReal(-9.13247223070096e-11))*(new_r21)))+(((IkReal(0.999433116142086))*(x312)))+(((IkReal(-0.0336666688624906))*(x313))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x326=((cj1)*(cj2));
IkReal x327=((new_r10)*(sj1));
IkReal x328=((new_r20)*(sj1));
IkReal x329=((new_r00)*(sj2));
IkReal x330=((new_r10)*(sj2));
IkReal x331=((cj1)*(new_r20));
IkReal x332=((cj2)*(new_r00));
IkReal x333=((cj2)*(new_r10));
if( IKabs(((gconst7)*(((((IkReal(-174742514.840830))*(x329)))+(((IkReal(6121413.42866618))*(new_r20)))+(((IkReal(213318.122751105))*(sj1)*(x329)))+(((IkReal(5886335.70810485))*(x330)))+(((IkReal(-5886335.70810485))*(x332)))+(((IkReal(213318.122751105))*(cj2)*(x327)))+(((IkReal(6114278.95729310))*(new_r10)*(x326)))+(((IkReal(6114278.95729310))*(cj1)*(x329)))+(((IkReal(-174742514.840830))*(x333)))+(((IkReal(205964.178714103))*(new_r00)*(x326)))+(((IkReal(-7185.78466310551))*(sj2)*(x327)))+(((IkReal(7185.78466310551))*(sj1)*(x332)))+(((IkReal(-205964.178714103))*(cj1)*(x330)))+(((IkReal(174736908.101400))*(x331)))+(((IkReal(6096311.51471461))*(x328))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(205962.303592098))*(new_r00)*(x326)))+(((IkReal(174744105.731634))*(x329)))+(((IkReal(213316.180677933))*(cj2)*(x327)))+(((IkReal(-205962.303592098))*(cj1)*(x330)))+(((IkReal(7185.71924288038))*(sj1)*(x332)))+(((IkReal(-7185.71924288038))*(sj2)*(x327)))+(((IkReal(5886389.29848240))*(x332)))+(((IkReal(6114223.29218140))*(cj1)*(x329)))+(((IkReal(6114223.29218140))*(new_r10)*(x326)))+(((IkReal(174744105.731634))*(x333)))+(((IkReal(6096256.01318061))*(x328)))+(((IkReal(-5886389.29848240))*(x330)))+(((IkReal(213316.180677933))*(sj1)*(x329)))+(((IkReal(174735317.276125))*(x331)))+(((IkReal(-6121469.15923832))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst7)*(((((IkReal(-174742514.840830))*(x329)))+(((IkReal(6121413.42866618))*(new_r20)))+(((IkReal(213318.122751105))*(sj1)*(x329)))+(((IkReal(5886335.70810485))*(x330)))+(((IkReal(-5886335.70810485))*(x332)))+(((IkReal(213318.122751105))*(cj2)*(x327)))+(((IkReal(6114278.95729310))*(new_r10)*(x326)))+(((IkReal(6114278.95729310))*(cj1)*(x329)))+(((IkReal(-174742514.840830))*(x333)))+(((IkReal(205964.178714103))*(new_r00)*(x326)))+(((IkReal(-7185.78466310551))*(sj2)*(x327)))+(((IkReal(7185.78466310551))*(sj1)*(x332)))+(((IkReal(-205964.178714103))*(cj1)*(x330)))+(((IkReal(174736908.101400))*(x331)))+(((IkReal(6096311.51471461))*(x328)))))), ((gconst7)*(((((IkReal(205962.303592098))*(new_r00)*(x326)))+(((IkReal(174744105.731634))*(x329)))+(((IkReal(213316.180677933))*(cj2)*(x327)))+(((IkReal(-205962.303592098))*(cj1)*(x330)))+(((IkReal(7185.71924288038))*(sj1)*(x332)))+(((IkReal(-7185.71924288038))*(sj2)*(x327)))+(((IkReal(5886389.29848240))*(x332)))+(((IkReal(6114223.29218140))*(cj1)*(x329)))+(((IkReal(6114223.29218140))*(new_r10)*(x326)))+(((IkReal(174744105.731634))*(x333)))+(((IkReal(6096256.01318061))*(x328)))+(((IkReal(-5886389.29848240))*(x330)))+(((IkReal(213316.180677933))*(sj1)*(x329)))+(((IkReal(174735317.276125))*(x331)))+(((IkReal(-6121469.15923832))*(new_r20)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x334=IKsin(j0);
IkReal x335=IKcos(j0);
IkReal x336=((cj1)*(new_r11));
IkReal x337=((IkReal(0.999387668812801))*(cj2));
IkReal x338=((cj2)*(new_r01));
IkReal x339=((new_r01)*(sj2));
IkReal x340=((IkReal(0.0349684756605290))*(cj1));
IkReal x341=((new_r11)*(sj1));
IkReal x342=((IkReal(0.999998559603112))*(sj2));
IkReal x343=((IkReal(0.00121999824271580))*(sj1));
IkReal x344=((cj2)*(new_r10));
IkReal x345=((IkReal(0.707102543863324))*(sj1));
IkReal x346=((IkReal(0.00122193898950495))*(sj2));
IkReal x347=((IkReal(0.00117798845789884))*(sj2));
IkReal x348=((cj1)*(new_r10));
IkReal x349=((cj2)*(new_r00));
IkReal x350=((IkReal(0.00122193898950495))*(cj1));
IkReal x351=((cj2)*(new_r11));
IkReal x352=((new_r00)*(sj2));
IkReal x353=((IkReal(0.00117999830033167))*(sj1));
IkReal x354=((IkReal(0.999387668812801))*(cj1));
IkReal x355=((IkReal(0.999998559603112))*(sj1));
IkReal x356=((IkReal(1.00000000000000))*(sj2));
IkReal x357=((IkReal(0.707103562373095))*(x334));
IkReal x358=((IkReal(0.707109999985348))*(x335));
IkReal x359=((IkReal(0.707109999985348))*(x334));
IkReal x360=((IkReal(0.707103562373095))*(x335));
IkReal x361=((cj1)*(x334));
IkReal x362=((cj1)*(x335));
IkReal x363=((sj1)*(x334));
IkReal x364=((sj1)*(x335));
IkReal x365=((x359)+(x360));
evalcond[0]=((((IkReal(-1.00000000000000))*(new_r10)*(x347)))+(((IkReal(0.999387671183844))*(new_r20)))+(x365)+(((IkReal(0.00117798845789884))*(x349)))+(((IkReal(0.0349699160554654))*(x344)))+(((IkReal(0.0349699160554654))*(x352))));
evalcond[1]=((((IkReal(-1.00000000000000))*(new_r11)*(x347)))+(((IkReal(-1.00000000000000))*(x358)))+(((IkReal(0.999387671183844))*(new_r21)))+(x357)+(((IkReal(0.0349699160554654))*(x339)))+(((IkReal(0.0349699160554654))*(x351)))+(((IkReal(0.00117798845789884))*(x338))));
evalcond[2]=((((IkReal(-0.000862672957388891))*(x364)))+(((IkReal(-0.0247265588238043))*(x362)))+(((IkReal(0.706677016156165))*(x334)))+(((IkReal(0.000862665103513256))*(x363)))+(((IkReal(0.706670582485847))*(x335)))+(((IkReal(0.0247263337103169))*(x361)))+(new_r20));
evalcond[3]=((((IkReal(-0.000862672957388891))*(x363)))+(((IkReal(-0.0247265588238043))*(x361)))+(((IkReal(-0.000862665103513256))*(x364)))+(((IkReal(-0.0247263337103169))*(x362)))+(((IkReal(0.706670582485847))*(x334)))+(new_r21)+(((IkReal(-0.706677016156165))*(x335))));
evalcond[4]=((((IkReal(0.0247275773414677))*(x334)))+(((IkReal(0.0247273522187076))*(x335)))+(x352)+(x344)+(((IkReal(-0.000834381001758723))*(x363)))+(((IkReal(0.706677014479576))*(x362)))+(((IkReal(-0.706670580809274))*(x361)))+(((IkReal(0.000834388598130239))*(x364))));
evalcond[5]=((((IkReal(0.0247273522187076))*(x334)))+(((IkReal(0.706670580809274))*(x362)))+(((IkReal(0.000834381001758723))*(x364)))+(x339)+(x351)+(((IkReal(-0.0247275773414677))*(x335)))+(((IkReal(0.706677014479576))*(x361)))+(((IkReal(0.000834388598130239))*(x363))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x334)*(x345)))+(((IkReal(0.000832967418447589))*(x334)))+(x349)+(((IkReal(0.000864037412481531))*(x361)))+(((IkReal(-0.000864045278850941))*(x362)))+(((IkReal(0.000832959835014659))*(x335)))+(((IkReal(-1.00000000000000))*(new_r10)*(x356)))+(((IkReal(0.707108981466304))*(x364))));
evalcond[7]=((((x335)*(x345)))+(x338)+(((IkReal(-0.000864037412481531))*(x362)))+(((IkReal(-0.000864045278850941))*(x361)))+(((IkReal(0.000832959835014659))*(x334)))+(((IkReal(-1.00000000000000))*(new_r11)*(x356)))+(((IkReal(-0.000832967418447589))*(x335)))+(((IkReal(0.707108981466304))*(x363))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x337)*(x348)))+(((IkReal(-1.00000000000000))*(x358)))+(((new_r10)*(sj1)*(x342)))+(((IkReal(-1.00000000000000))*(x349)*(x355)))+(x357)+(((IkReal(-1.00000000000000))*(x344)*(x353)))+(((new_r20)*(x340)))+(((new_r20)*(x343)))+(((x349)*(x350)))+(((IkReal(-1.00000000000000))*(x346)*(x348)))+(((IkReal(-1.00000000000000))*(x352)*(x353)))+(((IkReal(-1.00000000000000))*(x352)*(x354))));
evalcond[9]=((((x338)*(x350)))+(((new_r21)*(x343)))+(((new_r21)*(x340)))+(((IkReal(-1.00000000000000))*(x336)*(x346)))+(((IkReal(-0.00117999830033167))*(cj2)*(x341)))+(((IkReal(-1.00000000000000))*(x365)))+(((IkReal(-1.00000000000000))*(x338)*(x355)))+(((IkReal(-1.00000000000000))*(x339)*(x353)))+(((IkReal(-1.00000000000000))*(x339)*(x354)))+(((x341)*(x342)))+(((IkReal(-1.00000000000000))*(x336)*(x337))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x366=((new_r21)*(sj1));
IkReal x367=((new_r20)*(sj1));
IkReal x368=((IkReal(0.0247263337103169))*(cj1));
IkReal x369=((IkReal(0.0247265588238043))*(cj1));
if( IKabs(((gconst6)*(((((IkReal(-1.00000000000000))*(new_r20)*(x368)))+(((IkReal(-0.000862665103513256))*(x367)))+(((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((new_r21)*(x369)))+(((IkReal(0.000862672957388891))*(x366))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((new_r20)*(x369)))+(((IkReal(-0.706670582485847))*(new_r20)))+(((IkReal(0.000862665103513256))*(x366)))+(((new_r21)*(x368)))+(((IkReal(0.706677016156165))*(new_r21)))+(((IkReal(0.000862672957388891))*(x367))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((IkReal(-1.00000000000000))*(new_r20)*(x368)))+(((IkReal(-0.000862665103513256))*(x367)))+(((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((new_r21)*(x369)))+(((IkReal(0.000862672957388891))*(x366)))))), ((gconst6)*(((((new_r20)*(x369)))+(((IkReal(-0.706670582485847))*(new_r20)))+(((IkReal(0.000862665103513256))*(x366)))+(((new_r21)*(x368)))+(((IkReal(0.706677016156165))*(new_r21)))+(((IkReal(0.000862672957388891))*(x367)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x370=IKsin(j0);
IkReal x371=IKcos(j0);
IkReal x372=((cj1)*(new_r11));
IkReal x373=((IkReal(0.999387668812801))*(cj2));
IkReal x374=((cj2)*(new_r01));
IkReal x375=((new_r01)*(sj2));
IkReal x376=((IkReal(0.0349684756605290))*(cj1));
IkReal x377=((new_r11)*(sj1));
IkReal x378=((IkReal(0.999998559603112))*(sj2));
IkReal x379=((IkReal(0.00121999824271580))*(sj1));
IkReal x380=((cj2)*(new_r10));
IkReal x381=((IkReal(0.707102543863324))*(sj1));
IkReal x382=((IkReal(0.00122193898950495))*(sj2));
IkReal x383=((IkReal(0.00117798845789884))*(sj2));
IkReal x384=((cj1)*(new_r10));
IkReal x385=((cj2)*(new_r00));
IkReal x386=((IkReal(0.00122193898950495))*(cj1));
IkReal x387=((cj2)*(new_r11));
IkReal x388=((new_r00)*(sj2));
IkReal x389=((IkReal(0.00117999830033167))*(sj1));
IkReal x390=((IkReal(0.999387668812801))*(cj1));
IkReal x391=((IkReal(0.999998559603112))*(sj1));
IkReal x392=((IkReal(1.00000000000000))*(sj2));
IkReal x393=((IkReal(0.707103562373095))*(x370));
IkReal x394=((IkReal(0.707109999985348))*(x371));
IkReal x395=((IkReal(0.707109999985348))*(x370));
IkReal x396=((IkReal(0.707103562373095))*(x371));
IkReal x397=((cj1)*(x370));
IkReal x398=((cj1)*(x371));
IkReal x399=((sj1)*(x370));
IkReal x400=((sj1)*(x371));
IkReal x401=((x395)+(x396));
evalcond[0]=((((IkReal(-1.00000000000000))*(new_r10)*(x383)))+(((IkReal(0.999387671183844))*(new_r20)))+(x401)+(((IkReal(0.00117798845789884))*(x385)))+(((IkReal(0.0349699160554654))*(x380)))+(((IkReal(0.0349699160554654))*(x388))));
evalcond[1]=((((IkReal(0.00117798845789884))*(x374)))+(((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(new_r11)*(x383)))+(((IkReal(0.0349699160554654))*(x375)))+(((IkReal(0.999387671183844))*(new_r21)))+(x393)+(((IkReal(0.0349699160554654))*(x387))));
evalcond[2]=((((IkReal(0.706670582485847))*(x371)))+(((IkReal(0.000862665103513256))*(x399)))+(((IkReal(0.0247263337103169))*(x397)))+(new_r20)+(((IkReal(0.706677016156165))*(x370)))+(((IkReal(-0.000862672957388891))*(x400)))+(((IkReal(-0.0247265588238043))*(x398))));
evalcond[3]=((((IkReal(0.706670582485847))*(x370)))+(((IkReal(-0.0247263337103169))*(x398)))+(((IkReal(-0.706677016156165))*(x371)))+(new_r21)+(((IkReal(-0.000862672957388891))*(x399)))+(((IkReal(-0.000862665103513256))*(x400)))+(((IkReal(-0.0247265588238043))*(x397))));
evalcond[4]=((((IkReal(0.000834388598130239))*(x400)))+(((IkReal(-0.000834381001758723))*(x399)))+(x380)+(x388)+(((IkReal(0.0247273522187076))*(x371)))+(((IkReal(0.0247275773414677))*(x370)))+(((IkReal(-0.706670580809274))*(x397)))+(((IkReal(0.706677014479576))*(x398))));
evalcond[5]=((((IkReal(0.000834381001758723))*(x400)))+(((IkReal(0.706670580809274))*(x398)))+(x387)+(x375)+(((IkReal(0.0247273522187076))*(x370)))+(((IkReal(0.000834388598130239))*(x399)))+(((IkReal(-0.0247275773414677))*(x371)))+(((IkReal(0.706677014479576))*(x397))));
evalcond[6]=((((IkReal(0.000832959835014659))*(x371)))+(x385)+(((IkReal(0.707108981466304))*(x400)))+(((IkReal(0.000832967418447589))*(x370)))+(((IkReal(-1.00000000000000))*(new_r10)*(x392)))+(((IkReal(-0.000864045278850941))*(x398)))+(((IkReal(0.000864037412481531))*(x397)))+(((IkReal(-1.00000000000000))*(x370)*(x381))));
evalcond[7]=((((IkReal(-0.000832967418447589))*(x371)))+(((IkReal(0.000832959835014659))*(x370)))+(x374)+(((x371)*(x381)))+(((IkReal(-0.000864037412481531))*(x398)))+(((IkReal(-0.000864045278850941))*(x397)))+(((IkReal(0.707108981466304))*(x399)))+(((IkReal(-1.00000000000000))*(new_r11)*(x392))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x373)*(x384)))+(((IkReal(-1.00000000000000))*(x394)))+(((IkReal(-1.00000000000000))*(x380)*(x389)))+(((new_r20)*(x379)))+(((new_r20)*(x376)))+(((IkReal(-1.00000000000000))*(x385)*(x391)))+(((IkReal(-1.00000000000000))*(x388)*(x390)))+(((new_r10)*(sj1)*(x378)))+(x393)+(((x385)*(x386)))+(((IkReal(-1.00000000000000))*(x388)*(x389)))+(((IkReal(-1.00000000000000))*(x382)*(x384))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x372)*(x373)))+(((IkReal(-1.00000000000000))*(x375)*(x389)))+(((x374)*(x386)))+(((new_r21)*(x379)))+(((new_r21)*(x376)))+(((IkReal(-0.00117999830033167))*(cj2)*(x377)))+(((IkReal(-1.00000000000000))*(x374)*(x391)))+(((x377)*(x378)))+(((IkReal(-1.00000000000000))*(x401)))+(((IkReal(-1.00000000000000))*(x375)*(x390)))+(((IkReal(-1.00000000000000))*(x372)*(x382))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}

} else
{
{
IkReal j2array[1], cj2array[1], sj2array[1];
bool j2valid[1]={false};
_nj2 = 1;
IkReal x402=((new_r12)*(sj1));
IkReal x403=((new_r02)*(sj1));
IkReal x404=((cj1)*(new_r02));
IkReal x405=((cj1)*(new_r12));
if( IKabs(((gconst2)*(((((IkReal(-0.00117999830033167))*(x404)))+(((IkReal(0.00122193898950495))*(x402)))+(((IkReal(0.999998559603112))*(x405)))+(((IkReal(0.999387668812801))*(x403))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst2)*(((((IkReal(-0.00117999830033167))*(x405)))+(((IkReal(-0.999998559603112))*(x404)))+(((IkReal(-0.00122193898950495))*(x403)))+(((IkReal(0.999387668812801))*(x402))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j2array[0]=IKatan2(((gconst2)*(((((IkReal(-0.00117999830033167))*(x404)))+(((IkReal(0.00122193898950495))*(x402)))+(((IkReal(0.999998559603112))*(x405)))+(((IkReal(0.999387668812801))*(x403)))))), ((gconst2)*(((((IkReal(-0.00117999830033167))*(x405)))+(((IkReal(-0.999998559603112))*(x404)))+(((IkReal(-0.00122193898950495))*(x403)))+(((IkReal(0.999387668812801))*(x402)))))));
sj2array[0]=IKsin(j2array[0]);
cj2array[0]=IKcos(j2array[0]);
if( j2array[0] > IKPI )
{
    j2array[0]-=IK2PI;
}
else if( j2array[0] < -IKPI )
{    j2array[0]+=IK2PI;
}
j2valid[0] = true;
for(int ij2 = 0; ij2 < 1; ++ij2)
{
if( !j2valid[ij2] )
{
    continue;
}
_ij2[0] = ij2; _ij2[1] = -1;
for(int iij2 = ij2+1; iij2 < 1; ++iij2)
{
if( j2valid[iij2] && IKabs(cj2array[ij2]-cj2array[iij2]) < IKFAST_SOLUTION_THRESH && IKabs(sj2array[ij2]-sj2array[iij2]) < IKFAST_SOLUTION_THRESH )
{
    j2valid[iij2]=false; _ij2[1] = iij2; break; 
}
}
j2 = j2array[ij2]; cj2 = cj2array[ij2]; sj2 = sj2array[ij2];
{
IkReal evalcond[7];
IkReal x406=IKcos(j2);
IkReal x407=IKsin(j2);
IkReal x408=((IkReal(0.00122193898950495))*(sj1));
IkReal x409=((IkReal(0.00121999824271580))*(cj1));
IkReal x410=((IkReal(0.00122193898950495))*(cj1));
IkReal x411=((IkReal(0.0349684756605290))*(sj1));
IkReal x412=((IkReal(0.999387668812801))*(sj1));
IkReal x413=((IkReal(0.00117999830033167))*(sj1));
IkReal x414=((IkReal(0.999387668812801))*(cj1));
IkReal x415=((IkReal(0.00117999830033167))*(cj1));
IkReal x416=((IkReal(0.999998559603112))*(cj1));
IkReal x417=((new_r02)*(x406));
IkReal x418=((new_r11)*(x407));
IkReal x419=((new_r01)*(x406));
IkReal x420=((new_r12)*(x406));
IkReal x421=((new_r10)*(x406));
IkReal x422=((new_r00)*(x407));
IkReal x423=((new_r00)*(x406));
IkReal x424=((new_r02)*(x407));
IkReal x425=((new_r12)*(x407));
IkReal x426=((new_r11)*(x406));
IkReal x427=((new_r10)*(x407));
IkReal x428=((new_r01)*(x407));
IkReal x429=((IkReal(0.999998559603112))*(x425));
evalcond[0]=((x415)+(x424)+(x420)+(((IkReal(-1.00000000000000))*(x412))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x425)))+(x408)+(x416)+(x417));
evalcond[2]=((((IkReal(-0.00117798845789884))*(x425)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(0.00117798845789884))*(x417)))+(((IkReal(0.0349699160554654))*(x424)))+(((IkReal(0.0349699160554654))*(x420))));
evalcond[3]=((((IkReal(-0.999998559603112))*(sj1)*(x417)))+(((x410)*(x417)))+(((IkReal(0.0349684756605290))*(cj1)*(new_r22)))+(((IkReal(0.00121999824271580))*(new_r22)*(sj1)))+(((IkReal(-1.00000000000000))*(x414)*(x424)))+(((IkReal(-1.00000000000000))*(x414)*(x420)))+(((IkReal(-1.00000000000000))*(x413)*(x420)))+(((IkReal(-1.00000000000000))*(x413)*(x424)))+(((IkReal(-1.00000000000000))*(x410)*(x425)))+(((sj1)*(x429))));
evalcond[4]=((((IkReal(-1.00000000000000))*(x416)*(x427)))+(((IkReal(-1.00000000000000))*(x412)*(x422)))+(((IkReal(-1.00000000000000))*(x412)*(x421)))+(((x415)*(x422)))+(((x415)*(x421)))+(((IkReal(-1.00000000000000))*(new_r20)*(x409)))+(((x416)*(x423)))+(((x408)*(x423)))+(((new_r20)*(x411)))+(((IkReal(-1.00000000000000))*(x408)*(x427))));
evalcond[5]=((((x416)*(x419)))+(((IkReal(-1.00000000000000))*(x412)*(x428)))+(((IkReal(-1.00000000000000))*(x412)*(x426)))+(((x415)*(x426)))+(((x415)*(x428)))+(((x408)*(x419)))+(((IkReal(-1.00000000000000))*(x416)*(x418)))+(((IkReal(-1.00000000000000))*(new_r21)*(x409)))+(((new_r21)*(x411)))+(((IkReal(-1.00000000000000))*(x408)*(x418))));
evalcond[6]=((IkReal(1.00000000000000))+(((IkReal(-1.00000000000000))*(x416)*(x425)))+(((x416)*(x417)))+(((IkReal(-1.00000000000000))*(x412)*(x424)))+(((IkReal(-1.00000000000000))*(x412)*(x420)))+(((new_r22)*(x411)))+(((x415)*(x424)))+(((x415)*(x420)))+(((x408)*(x417)))+(((IkReal(-1.00000000000000))*(x408)*(x425)))+(((IkReal(-1.00000000000000))*(new_r22)*(x409))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  )
{
continue;
}
}

{
IkReal dummyeval[1];
IkReal gconst6;
gconst6=IKsign(((IkReal(0.998775717314267))+(((IkReal(1.48839571222963e-6))*((sj1)*(sj1))))+(((IkReal(8.53229577125909e-5))*(cj1)*(sj1)))+(((IkReal(0.00122279429002101))*((cj1)*(cj1))))));
dummyeval[0]=((IkReal(671041.786204887))+(((IkReal(57.3254525066968))*(cj1)*(sj1)))+((sj1)*(sj1))+(((IkReal(821.551876274387))*((cj1)*(cj1)))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
IkReal gconst7;
gconst7=IKsign(((((IkReal(-8626729.57424643))*(sj1)))+(((IkReal(-247265588.248290))*(cj1)))));
dummyeval[0]=((((IkReal(-1.00000000000000))*(sj1)))+(((IkReal(-28.6627262533484))*(cj1))));
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal evalcond[9];
IkReal x430=((new_r12)*(sj2));
IkReal x431=((cj2)*(new_r02));
IkReal x432=((IkReal(0.0336460537878085))*(sj2));
IkReal x433=((new_r02)*(sj2));
IkReal x434=((IkReal(0.0336460537878085))*(cj2));
IkReal x435=((IkReal(0.998821134445359))*(cj2));
IkReal x436=((cj2)*(new_r12));
IkReal x437=((IkReal(0.998821134445359))*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(1.53592195542386))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(0.0349897511218768))+(new_r22));
evalcond[2]=((IkReal(-0.998821134445359))+(x433)+(x436));
evalcond[3]=((IkReal(-0.0336460537878085))+(((IkReal(-1.00000000000000))*(x430)))+(x431));
evalcond[4]=((((IkReal(-0.00117798845789884))*(x430)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(0.00117798845789884))*(x431)))+(((IkReal(0.0349699160554654))*(x436)))+(((IkReal(0.0349699160554654))*(x433))));
evalcond[5]=((((IkReal(-0.999433116142086))*(x431)))+(((IkReal(0.999433116142086))*(x430)))+(((IkReal(9.13247223070096e-11))*(new_r22)))+(((IkReal(0.0336666688624906))*(x433)))+(((IkReal(0.0336666688624906))*(x436))));
evalcond[6]=((((IkReal(-1.00000000000000))*(new_r00)*(x437)))+(((IkReal(-1.00000000000000))*(new_r00)*(x434)))+(((new_r10)*(x432)))+(((IkReal(-1.00000000000000))*(new_r10)*(x435)))+(((IkReal(0.0349897511218768))*(new_r20))));
evalcond[7]=((((IkReal(-1.00000000000000))*(new_r01)*(x437)))+(((IkReal(-1.00000000000000))*(new_r01)*(x434)))+(((new_r11)*(x432)))+(((IkReal(-1.00000000000000))*(new_r11)*(x435)))+(((IkReal(0.0349897511218768))*(new_r21))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(-0.998821134445359))*(x433)))+(((IkReal(-0.0336460537878085))*(x431)))+(((IkReal(0.0336460537878085))*(x430)))+(((IkReal(-1.00000000000000))*(new_r12)*(x435)))+(((IkReal(0.0349897511218768))*(new_r22))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(335929.317709190);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x438=((cj2)*(new_r10));
IkReal x439=((new_r00)*(sj2));
if( IKabs(((((IkReal(-20.2205232310600))*(x439)))+(((IkReal(-20.2205232310600))*(x438)))+(((IkReal(-0.0263620447663619))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(1.38871181026863))*(new_r21)))+(((IkReal(-20.2203391373529))*(x439)))+(((IkReal(-20.2203391373529))*(x438))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-20.2205232310600))*(x439)))+(((IkReal(-20.2205232310600))*(x438)))+(((IkReal(-0.0263620447663619))*(new_r21)))))+IKsqr(((((IkReal(1.38871181026863))*(new_r21)))+(((IkReal(-20.2203391373529))*(x439)))+(((IkReal(-20.2203391373529))*(x438)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-20.2205232310600))*(x439)))+(((IkReal(-20.2205232310600))*(x438)))+(((IkReal(-0.0263620447663619))*(new_r21)))), ((((IkReal(1.38871181026863))*(new_r21)))+(((IkReal(-20.2203391373529))*(x439)))+(((IkReal(-20.2203391373529))*(x438)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x440=IKsin(j0);
IkReal x441=IKcos(j0);
IkReal x442=((cj2)*(new_r01));
IkReal x443=((new_r01)*(sj2));
IkReal x444=((cj2)*(new_r10));
IkReal x445=((cj2)*(new_r11));
IkReal x446=((new_r10)*(sj2));
IkReal x447=((cj2)*(new_r00));
IkReal x448=((new_r11)*(sj2));
IkReal x449=((new_r00)*(sj2));
IkReal x450=((IkReal(0.707103562373095))*(x440));
IkReal x451=((IkReal(0.707109999985348))*(x441));
IkReal x452=((IkReal(0.707109999985348))*(x440));
IkReal x453=((IkReal(0.707103562373095))*(x441));
IkReal x454=((x452)+(x453));
evalcond[0]=((((IkReal(-0.00117798845789884))*(x446)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.00117798845789884))*(x447)))+(x454)+(((IkReal(0.0349699160554654))*(x449)))+(((IkReal(0.0349699160554654))*(x444))));
evalcond[1]=((((IkReal(-0.00117798845789884))*(x448)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(0.00117798845789884))*(x442)))+(((IkReal(-1.00000000000000))*(x451)))+(x450)+(((IkReal(0.0349699160554654))*(x445)))+(((IkReal(0.0349699160554654))*(x443))));
evalcond[2]=((((IkReal(0.706677016220741))*(x440)))+(((IkReal(0.706670582421271))*(x441)))+(new_r20));
evalcond[3]=((((IkReal(-0.706677016220741))*(x441)))+(((IkReal(0.706670582421271))*(x440)))+(new_r21));
evalcond[4]=((x449)+(x444)+(((IkReal(0.0485333988273702))*(x440)))+(((IkReal(0.000921313999845175))*(x441))));
evalcond[5]=((((IkReal(-0.0485333988273702))*(x441)))+(x445)+(x443)+(((IkReal(0.000921313999845175))*(x440))));
evalcond[6]=((((IkReal(-0.705869749359264))*(x440)))+(((IkReal(0.707542110575601))*(x441)))+(((IkReal(-1.00000000000000))*(x446)))+(x447));
evalcond[7]=((((IkReal(0.707542110575601))*(x440)))+(((IkReal(-1.00000000000000))*(x448)))+(((IkReal(0.705869749359264))*(x441)))+(x442));
evalcond[8]=((((IkReal(-0.999433116142086))*(x447)))+(((IkReal(0.999433116142086))*(x446)))+(((IkReal(9.13247223070096e-11))*(new_r20)))+(((IkReal(-1.00000000000000))*(x451)))+(x450)+(((IkReal(0.0336666688624906))*(x444)))+(((IkReal(0.0336666688624906))*(x449))));
evalcond[9]=((((IkReal(-0.999433116142086))*(x442)))+(((IkReal(0.999433116142086))*(x448)))+(((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x454)))+(((IkReal(0.0336666688624906))*(x445)))+(((IkReal(0.0336666688624906))*(x443))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x455=((cj2)*(new_r11));
IkReal x456=((new_r01)*(sj2));
if( IKabs(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x455)))+(((IkReal(-20.2203391373529))*(x456))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-0.0263620447663618))*(new_r20)))+(((IkReal(20.2205232310600))*(x456)))+(((IkReal(20.2205232310600))*(x455))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x455)))+(((IkReal(-20.2203391373529))*(x456)))))+IKsqr(((((IkReal(-0.0263620447663618))*(new_r20)))+(((IkReal(20.2205232310600))*(x456)))+(((IkReal(20.2205232310600))*(x455)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-1.38871181026863))*(new_r20)))+(((IkReal(-20.2203391373529))*(x455)))+(((IkReal(-20.2203391373529))*(x456)))), ((((IkReal(-0.0263620447663618))*(new_r20)))+(((IkReal(20.2205232310600))*(x456)))+(((IkReal(20.2205232310600))*(x455)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x457=IKsin(j0);
IkReal x458=IKcos(j0);
IkReal x459=((cj2)*(new_r01));
IkReal x460=((new_r01)*(sj2));
IkReal x461=((cj2)*(new_r10));
IkReal x462=((cj2)*(new_r11));
IkReal x463=((new_r10)*(sj2));
IkReal x464=((cj2)*(new_r00));
IkReal x465=((new_r11)*(sj2));
IkReal x466=((new_r00)*(sj2));
IkReal x467=((IkReal(0.707103562373095))*(x457));
IkReal x468=((IkReal(0.707109999985348))*(x458));
IkReal x469=((IkReal(0.707109999985348))*(x457));
IkReal x470=((IkReal(0.707103562373095))*(x458));
IkReal x471=((x469)+(x470));
evalcond[0]=((((IkReal(0.00117798845789884))*(x464)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(-0.00117798845789884))*(x463)))+(((IkReal(0.0349699160554654))*(x461)))+(((IkReal(0.0349699160554654))*(x466)))+(x471));
evalcond[1]=((((IkReal(0.00117798845789884))*(x459)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(-1.00000000000000))*(x468)))+(((IkReal(-0.00117798845789884))*(x465)))+(((IkReal(0.0349699160554654))*(x462)))+(((IkReal(0.0349699160554654))*(x460)))+(x467));
evalcond[2]=((((IkReal(0.706670582421271))*(x458)))+(((IkReal(0.706677016220741))*(x457)))+(new_r20));
evalcond[3]=((((IkReal(0.706670582421271))*(x457)))+(new_r21)+(((IkReal(-0.706677016220741))*(x458))));
evalcond[4]=((((IkReal(0.000921313999845175))*(x458)))+(x461)+(x466)+(((IkReal(0.0485333988273702))*(x457))));
evalcond[5]=((((IkReal(0.000921313999845175))*(x457)))+(((IkReal(-0.0485333988273702))*(x458)))+(x462)+(x460));
evalcond[6]=((((IkReal(0.707542110575601))*(x458)))+(((IkReal(-1.00000000000000))*(x463)))+(((IkReal(-0.705869749359264))*(x457)))+(x464));
evalcond[7]=((((IkReal(0.707542110575601))*(x457)))+(((IkReal(-1.00000000000000))*(x465)))+(x459)+(((IkReal(0.705869749359264))*(x458))));
evalcond[8]=((((IkReal(9.13247223070096e-11))*(new_r20)))+(((IkReal(-0.999433116142086))*(x464)))+(((IkReal(-1.00000000000000))*(x468)))+(x467)+(((IkReal(0.0336666688624906))*(x461)))+(((IkReal(0.0336666688624906))*(x466)))+(((IkReal(0.999433116142086))*(x463))));
evalcond[9]=((((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x471)))+(((IkReal(-0.999433116142086))*(x459)))+(((IkReal(0.0336666688624906))*(x462)))+(((IkReal(0.0336666688624906))*(x460)))+(((IkReal(0.999433116142086))*(x465))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20)))))+IKsqr(((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.707536807484192))*(new_r21)))+(((IkReal(-0.707543249170107))*(new_r20)))), ((((IkReal(-0.707536807484192))*(new_r20)))+(((IkReal(0.707543249170107))*(new_r21)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x472=IKsin(j0);
IkReal x473=IKcos(j0);
IkReal x474=((cj2)*(new_r01));
IkReal x475=((new_r01)*(sj2));
IkReal x476=((cj2)*(new_r10));
IkReal x477=((cj2)*(new_r11));
IkReal x478=((new_r10)*(sj2));
IkReal x479=((cj2)*(new_r00));
IkReal x480=((new_r11)*(sj2));
IkReal x481=((new_r00)*(sj2));
IkReal x482=((IkReal(0.707103562373095))*(x472));
IkReal x483=((IkReal(0.707109999985348))*(x473));
IkReal x484=((IkReal(0.707109999985348))*(x472));
IkReal x485=((IkReal(0.707103562373095))*(x473));
IkReal x486=((x485)+(x484));
evalcond[0]=((((IkReal(0.0349699160554654))*(x481)))+(((IkReal(0.00117798845789884))*(x479)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(-0.00117798845789884))*(x478)))+(x486)+(((IkReal(0.0349699160554654))*(x476))));
evalcond[1]=((((IkReal(0.00117798845789884))*(x474)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(0.999387671183844))*(new_r21)))+(x482)+(((IkReal(0.0349699160554654))*(x477)))+(((IkReal(0.0349699160554654))*(x475)))+(((IkReal(-0.00117798845789884))*(x480))));
evalcond[2]=((((IkReal(0.706670582421271))*(x473)))+(((IkReal(0.706677016220741))*(x472)))+(new_r20));
evalcond[3]=((((IkReal(0.706670582421271))*(x472)))+(new_r21)+(((IkReal(-0.706677016220741))*(x473))));
evalcond[4]=((((IkReal(0.0485333988273702))*(x472)))+(((IkReal(0.000921313999845175))*(x473)))+(x481)+(x476));
evalcond[5]=((((IkReal(0.000921313999845175))*(x472)))+(((IkReal(-0.0485333988273702))*(x473)))+(x475)+(x477));
evalcond[6]=((((IkReal(-0.705869749359264))*(x472)))+(((IkReal(-1.00000000000000))*(x478)))+(x479)+(((IkReal(0.707542110575601))*(x473))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x480)))+(((IkReal(0.705869749359264))*(x473)))+(x474)+(((IkReal(0.707542110575601))*(x472))));
evalcond[8]=((((IkReal(0.0336666688624906))*(x476)))+(((IkReal(-1.00000000000000))*(x483)))+(((IkReal(0.0336666688624906))*(x481)))+(((IkReal(9.13247223070096e-11))*(new_r20)))+(((IkReal(-0.999433116142086))*(x479)))+(x482)+(((IkReal(0.999433116142086))*(x478))));
evalcond[9]=((((IkReal(0.0336666688624906))*(x475)))+(((IkReal(0.0336666688624906))*(x477)))+(((IkReal(-1.00000000000000))*(x486)))+(((IkReal(0.999433116142086))*(x480)))+(((IkReal(9.13247223070096e-11))*(new_r21)))+(((IkReal(-0.999433116142086))*(x474))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
IkReal x487=((new_r12)*(sj2));
IkReal x488=((cj2)*(new_r02));
IkReal x489=((IkReal(0.0336460537878085))*(sj2));
IkReal x490=((new_r02)*(sj2));
IkReal x491=((IkReal(0.0336460537878085))*(cj2));
IkReal x492=((IkReal(0.998821134445359))*(cj2));
IkReal x493=((cj2)*(new_r12));
IkReal x494=((IkReal(0.998821134445359))*(sj2));
evalcond[0]=((IkReal(-3.14159265358979))+(IKfmod(((IkReal(-1.60567069816593))+(j1)), IkReal(6.28318530717959))));
evalcond[1]=((IkReal(-0.0349897511218768))+(new_r22));
evalcond[2]=((IkReal(0.998821134445359))+(x493)+(x490));
evalcond[3]=((IkReal(0.0336460537878085))+(((IkReal(-1.00000000000000))*(x487)))+(x488));
evalcond[4]=((((IkReal(0.00117798845789884))*(x488)))+(((IkReal(0.0349699160554654))*(x493)))+(((IkReal(0.0349699160554654))*(x490)))+(((IkReal(0.999387671183844))*(new_r22)))+(((IkReal(-0.00117798845789884))*(x487))));
evalcond[5]=((((IkReal(0.999433116142086))*(x488)))+(((IkReal(-9.13247223070096e-11))*(new_r22)))+(((IkReal(-0.999433116142086))*(x487)))+(((IkReal(-0.0336666688624906))*(x490)))+(((IkReal(-0.0336666688624906))*(x493))));
evalcond[6]=((((IkReal(-1.00000000000000))*(new_r10)*(x489)))+(((IkReal(-0.0349897511218768))*(new_r20)))+(((new_r10)*(x492)))+(((new_r00)*(x491)))+(((new_r00)*(x494))));
evalcond[7]=((((IkReal(-1.00000000000000))*(new_r11)*(x489)))+(((IkReal(-0.0349897511218768))*(new_r21)))+(((new_r11)*(x492)))+(((new_r01)*(x494)))+(((new_r01)*(x491))));
evalcond[8]=((IkReal(1.00000000000000))+(((IkReal(0.0336460537878085))*(x488)))+(((IkReal(-0.0349897511218768))*(new_r22)))+(((new_r12)*(x492)))+(((IkReal(-0.0336460537878085))*(x487)))+(((IkReal(0.998821134445359))*(x490))));
if( IKabs(evalcond[0]) < 0.0000010000000000  && IKabs(evalcond[1]) < 0.0000010000000000  && IKabs(evalcond[2]) < 0.0000010000000000  && IKabs(evalcond[3]) < 0.0000010000000000  && IKabs(evalcond[4]) < 0.0000010000000000  && IKabs(evalcond[5]) < 0.0000010000000000  && IKabs(evalcond[6]) < 0.0000010000000000  && IKabs(evalcond[7]) < 0.0000010000000000  && IKabs(evalcond[8]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(335929.317709190);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
{
IkReal dummyeval[1];
dummyeval[0]=IkReal(-795.658595018406);
if( IKabs(dummyeval[0]) < 0.0000010000000000  )
{
continue;

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x495=((new_r00)*(sj2));
IkReal x496=((cj2)*(new_r10));
if( IKabs(((((IkReal(-20.2205232273645))*(x496)))+(((IkReal(-20.2205232273645))*(x495)))+(((IkReal(-1.38871157020684))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(-20.2203391410484))*(x495)))+(((IkReal(-20.2203391410484))*(x496)))+(((IkReal(0.0263746878177797))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-20.2205232273645))*(x496)))+(((IkReal(-20.2205232273645))*(x495)))+(((IkReal(-1.38871157020684))*(new_r21)))))+IKsqr(((((IkReal(-20.2203391410484))*(x495)))+(((IkReal(-20.2203391410484))*(x496)))+(((IkReal(0.0263746878177797))*(new_r21)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-20.2205232273645))*(x496)))+(((IkReal(-20.2205232273645))*(x495)))+(((IkReal(-1.38871157020684))*(new_r21)))), ((((IkReal(-20.2203391410484))*(x495)))+(((IkReal(-20.2203391410484))*(x496)))+(((IkReal(0.0263746878177797))*(new_r21)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x497=IKsin(j0);
IkReal x498=IKcos(j0);
IkReal x499=((cj2)*(new_r01));
IkReal x500=((new_r01)*(sj2));
IkReal x501=((new_r11)*(sj2));
IkReal x502=((IkReal(0.0349699160554654))*(cj2));
IkReal x503=((new_r10)*(sj2));
IkReal x504=((cj2)*(new_r00));
IkReal x505=((cj2)*(new_r10));
IkReal x506=((new_r00)*(sj2));
IkReal x507=((cj2)*(new_r11));
IkReal x508=((IkReal(0.707103562373095))*(x497));
IkReal x509=((IkReal(0.707109999985348))*(x498));
IkReal x510=((IkReal(0.707109999985348))*(x497));
IkReal x511=((IkReal(0.707103562373095))*(x498));
IkReal x512=((x511)+(x510));
evalcond[0]=((((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.0349699160554654))*(x506)))+(((new_r10)*(x502)))+(x512)+(((IkReal(0.00117798845789884))*(x504)))+(((IkReal(-0.00117798845789884))*(x503))));
evalcond[1]=((((IkReal(-1.00000000000000))*(x509)))+(((IkReal(0.00117798845789884))*(x499)))+(((IkReal(0.999387671183844))*(new_r21)))+(((new_r11)*(x502)))+(((IkReal(0.0349699160554654))*(x500)))+(x508)+(((IkReal(-0.00117798845789884))*(x501))));
evalcond[2]=((((IkReal(0.706670582550424))*(x498)))+(new_r20)+(((IkReal(0.706677016091588))*(x497))));
evalcond[3]=((((IkReal(0.706670582550424))*(x497)))+(((IkReal(-0.706677016091588))*(x498)))+(new_r21));
evalcond[4]=((((IkReal(0.000921755855565219))*(x497)))+(((IkReal(0.0485333904375701))*(x498)))+(x505)+(x506));
evalcond[5]=((((IkReal(-0.000921755855565219))*(x498)))+(((IkReal(0.0485333904375701))*(x497)))+(x500)+(x507));
evalcond[6]=((((IkReal(0.707535684196160))*(x497)))+(((IkReal(-0.705876190905572))*(x498)))+(x504)+(((IkReal(-1.00000000000000))*(x503))));
evalcond[7]=((((IkReal(-0.705876190905572))*(x497)))+(((IkReal(-0.707535684196160))*(x498)))+(x499)+(((IkReal(-1.00000000000000))*(x501))));
evalcond[8]=((((IkReal(0.999433116142086))*(x504)))+(((IkReal(-1.00000000000000))*(x509)))+(((IkReal(-0.0336666688624906))*(x506)))+(((IkReal(-0.0336666688624906))*(x505)))+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(x508)+(((IkReal(-0.999433116142086))*(x503))));
evalcond[9]=((((IkReal(0.999433116142086))*(x499)))+(((IkReal(-0.0336666688624906))*(x507)))+(((IkReal(-0.0336666688624906))*(x500)))+(((IkReal(-9.13247223070096e-11))*(new_r21)))+(((IkReal(-1.00000000000000))*(x512)))+(((IkReal(-0.999433116142086))*(x501))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x513=((new_r01)*(sj2));
IkReal x514=((cj2)*(new_r11));
if( IKabs(((((IkReal(-20.2203391410484))*(x514)))+(((IkReal(-20.2203391410484))*(x513)))+(((IkReal(-0.0263746878177797))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(20.2205232273645))*(x514)))+(((IkReal(20.2205232273645))*(x513)))+(((IkReal(-1.38871157020684))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-20.2203391410484))*(x514)))+(((IkReal(-20.2203391410484))*(x513)))+(((IkReal(-0.0263746878177797))*(new_r20)))))+IKsqr(((((IkReal(20.2205232273645))*(x514)))+(((IkReal(20.2205232273645))*(x513)))+(((IkReal(-1.38871157020684))*(new_r20)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-20.2203391410484))*(x514)))+(((IkReal(-20.2203391410484))*(x513)))+(((IkReal(-0.0263746878177797))*(new_r20)))), ((((IkReal(20.2205232273645))*(x514)))+(((IkReal(20.2205232273645))*(x513)))+(((IkReal(-1.38871157020684))*(new_r20)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x515=IKsin(j0);
IkReal x516=IKcos(j0);
IkReal x517=((cj2)*(new_r01));
IkReal x518=((new_r01)*(sj2));
IkReal x519=((new_r11)*(sj2));
IkReal x520=((IkReal(0.0349699160554654))*(cj2));
IkReal x521=((new_r10)*(sj2));
IkReal x522=((cj2)*(new_r00));
IkReal x523=((cj2)*(new_r10));
IkReal x524=((new_r00)*(sj2));
IkReal x525=((cj2)*(new_r11));
IkReal x526=((IkReal(0.707103562373095))*(x515));
IkReal x527=((IkReal(0.707109999985348))*(x516));
IkReal x528=((IkReal(0.707109999985348))*(x515));
IkReal x529=((IkReal(0.707103562373095))*(x516));
IkReal x530=((x528)+(x529));
evalcond[0]=((((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.0349699160554654))*(x524)))+(((new_r10)*(x520)))+(((IkReal(0.00117798845789884))*(x522)))+(x530)+(((IkReal(-0.00117798845789884))*(x521))));
evalcond[1]=((((IkReal(0.00117798845789884))*(x517)))+(((IkReal(0.0349699160554654))*(x518)))+(((IkReal(-0.00117798845789884))*(x519)))+(((new_r11)*(x520)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(-1.00000000000000))*(x527)))+(x526));
evalcond[2]=((((IkReal(0.706677016091588))*(x515)))+(((IkReal(0.706670582550424))*(x516)))+(new_r20));
evalcond[3]=((((IkReal(0.706670582550424))*(x515)))+(new_r21)+(((IkReal(-0.706677016091588))*(x516))));
evalcond[4]=((((IkReal(0.000921755855565219))*(x515)))+(((IkReal(0.0485333904375701))*(x516)))+(x523)+(x524));
evalcond[5]=((((IkReal(0.0485333904375701))*(x515)))+(x525)+(x518)+(((IkReal(-0.000921755855565219))*(x516))));
evalcond[6]=((((IkReal(-0.705876190905572))*(x516)))+(((IkReal(-1.00000000000000))*(x521)))+(((IkReal(0.707535684196160))*(x515)))+(x522));
evalcond[7]=((((IkReal(-0.705876190905572))*(x515)))+(((IkReal(-1.00000000000000))*(x519)))+(x517)+(((IkReal(-0.707535684196160))*(x516))));
evalcond[8]=((((IkReal(-0.999433116142086))*(x521)))+(((IkReal(-0.0336666688624906))*(x524)))+(((IkReal(-0.0336666688624906))*(x523)))+(((IkReal(-1.00000000000000))*(x527)))+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(x526)+(((IkReal(0.999433116142086))*(x522))));
evalcond[9]=((((IkReal(-0.0336666688624906))*(x518)))+(((IkReal(-0.0336666688624906))*(x525)))+(((IkReal(-1.00000000000000))*(x530)))+(((IkReal(0.999433116142086))*(x517)))+(((IkReal(-0.999433116142086))*(x519)))+(((IkReal(-9.13247223070096e-11))*(new_r21))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
if( IKabs(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(IKsqr(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21)))))+IKsqr(((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20)))))-1) <= IKFAST_SINCOS_THRESH )
    continue;
j0array[0]=IKatan2(((((IkReal(-0.707543249040796))*(new_r20)))+(((IkReal(-0.707536807613504))*(new_r21)))), ((((IkReal(0.707543249040796))*(new_r21)))+(((IkReal(-0.707536807613504))*(new_r20)))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x531=IKsin(j0);
IkReal x532=IKcos(j0);
IkReal x533=((cj2)*(new_r01));
IkReal x534=((new_r01)*(sj2));
IkReal x535=((new_r11)*(sj2));
IkReal x536=((IkReal(0.0349699160554654))*(cj2));
IkReal x537=((new_r10)*(sj2));
IkReal x538=((cj2)*(new_r00));
IkReal x539=((cj2)*(new_r10));
IkReal x540=((new_r00)*(sj2));
IkReal x541=((cj2)*(new_r11));
IkReal x542=((IkReal(0.707103562373095))*(x531));
IkReal x543=((IkReal(0.707109999985348))*(x532));
IkReal x544=((IkReal(0.707109999985348))*(x531));
IkReal x545=((IkReal(0.707103562373095))*(x532));
IkReal x546=((x544)+(x545));
evalcond[0]=((((IkReal(0.999387671183844))*(new_r20)))+(((new_r10)*(x536)))+(((IkReal(0.0349699160554654))*(x540)))+(((IkReal(0.00117798845789884))*(x538)))+(x546)+(((IkReal(-0.00117798845789884))*(x537))));
evalcond[1]=((((new_r11)*(x536)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(0.0349699160554654))*(x534)))+(((IkReal(-1.00000000000000))*(x543)))+(((IkReal(0.00117798845789884))*(x533)))+(x542)+(((IkReal(-0.00117798845789884))*(x535))));
evalcond[2]=((((IkReal(0.706677016091588))*(x531)))+(new_r20)+(((IkReal(0.706670582550424))*(x532))));
evalcond[3]=((((IkReal(-0.706677016091588))*(x532)))+(new_r21)+(((IkReal(0.706670582550424))*(x531))));
evalcond[4]=((((IkReal(0.0485333904375701))*(x532)))+(x540)+(x539)+(((IkReal(0.000921755855565219))*(x531))));
evalcond[5]=((((IkReal(0.0485333904375701))*(x531)))+(x541)+(x534)+(((IkReal(-0.000921755855565219))*(x532))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x537)))+(((IkReal(-0.705876190905572))*(x532)))+(x538)+(((IkReal(0.707535684196160))*(x531))));
evalcond[7]=((((IkReal(-1.00000000000000))*(x535)))+(((IkReal(-0.705876190905572))*(x531)))+(((IkReal(-0.707535684196160))*(x532)))+(x533));
evalcond[8]=((((IkReal(-0.0336666688624906))*(x539)))+(((IkReal(-0.0336666688624906))*(x540)))+(((IkReal(-1.00000000000000))*(x543)))+(((IkReal(-9.13247223070096e-11))*(new_r20)))+(x542)+(((IkReal(0.999433116142086))*(x538)))+(((IkReal(-0.999433116142086))*(x537))));
evalcond[9]=((((IkReal(-0.0336666688624906))*(x534)))+(((IkReal(-0.0336666688624906))*(x541)))+(((IkReal(-1.00000000000000))*(x546)))+(((IkReal(-9.13247223070096e-11))*(new_r21)))+(((IkReal(0.999433116142086))*(x533)))+(((IkReal(-0.999433116142086))*(x535))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
if( 1 )
{
continue;

} else
{
}
}
}
}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x547=((cj1)*(cj2));
IkReal x548=((new_r10)*(sj1));
IkReal x549=((new_r20)*(sj1));
IkReal x550=((new_r00)*(sj2));
IkReal x551=((new_r10)*(sj2));
IkReal x552=((cj1)*(new_r20));
IkReal x553=((cj2)*(new_r00));
IkReal x554=((cj2)*(new_r10));
if( IKabs(((gconst7)*(((((IkReal(6121413.42866618))*(new_r20)))+(((IkReal(213318.122751105))*(sj1)*(x550)))+(((IkReal(-7185.78466310551))*(sj2)*(x548)))+(((IkReal(205964.178714103))*(new_r00)*(x547)))+(((IkReal(6114278.95729310))*(new_r10)*(x547)))+(((IkReal(-174742514.840830))*(x554)))+(((IkReal(-174742514.840830))*(x550)))+(((IkReal(174736908.101400))*(x552)))+(((IkReal(-205964.178714103))*(cj1)*(x551)))+(((IkReal(-5886335.70810485))*(x553)))+(((IkReal(5886335.70810485))*(x551)))+(((IkReal(213318.122751105))*(cj2)*(x548)))+(((IkReal(6096311.51471461))*(x549)))+(((IkReal(6114278.95729310))*(cj1)*(x550)))+(((IkReal(7185.78466310551))*(sj1)*(x553))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst7)*(((((IkReal(174735317.276125))*(x552)))+(((IkReal(6114223.29218140))*(cj1)*(x550)))+(((IkReal(7185.71924288038))*(sj1)*(x553)))+(((IkReal(213316.180677933))*(cj2)*(x548)))+(((IkReal(-7185.71924288038))*(sj2)*(x548)))+(((IkReal(6114223.29218140))*(new_r10)*(x547)))+(((IkReal(213316.180677933))*(sj1)*(x550)))+(((IkReal(5886389.29848240))*(x553)))+(((IkReal(205962.303592098))*(new_r00)*(x547)))+(((IkReal(174744105.731634))*(x554)))+(((IkReal(174744105.731634))*(x550)))+(((IkReal(6096256.01318061))*(x549)))+(((IkReal(-205962.303592098))*(cj1)*(x551)))+(((IkReal(-5886389.29848240))*(x551)))+(((IkReal(-6121469.15923832))*(new_r20))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst7)*(((((IkReal(6121413.42866618))*(new_r20)))+(((IkReal(213318.122751105))*(sj1)*(x550)))+(((IkReal(-7185.78466310551))*(sj2)*(x548)))+(((IkReal(205964.178714103))*(new_r00)*(x547)))+(((IkReal(6114278.95729310))*(new_r10)*(x547)))+(((IkReal(-174742514.840830))*(x554)))+(((IkReal(-174742514.840830))*(x550)))+(((IkReal(174736908.101400))*(x552)))+(((IkReal(-205964.178714103))*(cj1)*(x551)))+(((IkReal(-5886335.70810485))*(x553)))+(((IkReal(5886335.70810485))*(x551)))+(((IkReal(213318.122751105))*(cj2)*(x548)))+(((IkReal(6096311.51471461))*(x549)))+(((IkReal(6114278.95729310))*(cj1)*(x550)))+(((IkReal(7185.78466310551))*(sj1)*(x553)))))), ((gconst7)*(((((IkReal(174735317.276125))*(x552)))+(((IkReal(6114223.29218140))*(cj1)*(x550)))+(((IkReal(7185.71924288038))*(sj1)*(x553)))+(((IkReal(213316.180677933))*(cj2)*(x548)))+(((IkReal(-7185.71924288038))*(sj2)*(x548)))+(((IkReal(6114223.29218140))*(new_r10)*(x547)))+(((IkReal(213316.180677933))*(sj1)*(x550)))+(((IkReal(5886389.29848240))*(x553)))+(((IkReal(205962.303592098))*(new_r00)*(x547)))+(((IkReal(174744105.731634))*(x554)))+(((IkReal(174744105.731634))*(x550)))+(((IkReal(6096256.01318061))*(x549)))+(((IkReal(-205962.303592098))*(cj1)*(x551)))+(((IkReal(-5886389.29848240))*(x551)))+(((IkReal(-6121469.15923832))*(new_r20)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x555=IKsin(j0);
IkReal x556=IKcos(j0);
IkReal x557=((cj1)*(new_r11));
IkReal x558=((IkReal(0.999387668812801))*(cj2));
IkReal x559=((cj2)*(new_r01));
IkReal x560=((new_r01)*(sj2));
IkReal x561=((IkReal(0.0349684756605290))*(cj1));
IkReal x562=((new_r11)*(sj1));
IkReal x563=((IkReal(0.999998559603112))*(sj2));
IkReal x564=((IkReal(0.00121999824271580))*(sj1));
IkReal x565=((cj2)*(new_r10));
IkReal x566=((IkReal(0.707102543863324))*(sj1));
IkReal x567=((IkReal(0.00122193898950495))*(sj2));
IkReal x568=((IkReal(0.00117798845789884))*(sj2));
IkReal x569=((cj1)*(new_r10));
IkReal x570=((cj2)*(new_r00));
IkReal x571=((IkReal(0.00122193898950495))*(cj1));
IkReal x572=((cj2)*(new_r11));
IkReal x573=((new_r00)*(sj2));
IkReal x574=((IkReal(0.00117999830033167))*(sj1));
IkReal x575=((IkReal(0.999387668812801))*(cj1));
IkReal x576=((IkReal(0.999998559603112))*(sj1));
IkReal x577=((IkReal(1.00000000000000))*(sj2));
IkReal x578=((IkReal(0.707103562373095))*(x555));
IkReal x579=((IkReal(0.707109999985348))*(x556));
IkReal x580=((IkReal(0.707109999985348))*(x555));
IkReal x581=((IkReal(0.707103562373095))*(x556));
IkReal x582=((cj1)*(x555));
IkReal x583=((cj1)*(x556));
IkReal x584=((sj1)*(x555));
IkReal x585=((sj1)*(x556));
IkReal x586=((x580)+(x581));
evalcond[0]=((((IkReal(0.0349699160554654))*(x573)))+(((IkReal(0.00117798845789884))*(x570)))+(((IkReal(0.999387671183844))*(new_r20)))+(x586)+(((IkReal(0.0349699160554654))*(x565)))+(((IkReal(-1.00000000000000))*(new_r10)*(x568))));
evalcond[1]=((((IkReal(0.0349699160554654))*(x572)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(0.00117798845789884))*(x559)))+(((IkReal(-1.00000000000000))*(x579)))+(x578)+(((IkReal(0.0349699160554654))*(x560)))+(((IkReal(-1.00000000000000))*(new_r11)*(x568))));
evalcond[2]=((((IkReal(0.706670582485847))*(x556)))+(((IkReal(0.706677016156165))*(x555)))+(((IkReal(-0.0247265588238043))*(x583)))+(((IkReal(0.0247263337103169))*(x582)))+(new_r20)+(((IkReal(-0.000862672957388891))*(x585)))+(((IkReal(0.000862665103513256))*(x584))));
evalcond[3]=((((IkReal(-0.0247263337103169))*(x583)))+(((IkReal(-0.706677016156165))*(x556)))+(((IkReal(0.706670582485847))*(x555)))+(((IkReal(-0.0247265588238043))*(x582)))+(new_r21)+(((IkReal(-0.000862665103513256))*(x585)))+(((IkReal(-0.000862672957388891))*(x584))));
evalcond[4]=((((IkReal(0.0247275773414677))*(x555)))+(((IkReal(0.000834388598130239))*(x585)))+(((IkReal(0.0247273522187076))*(x556)))+(((IkReal(-0.000834381001758723))*(x584)))+(((IkReal(0.706677014479576))*(x583)))+(((IkReal(-0.706670580809274))*(x582)))+(x573)+(x565));
evalcond[5]=((((IkReal(0.000834388598130239))*(x584)))+(((IkReal(0.0247273522187076))*(x555)))+(((IkReal(-0.0247275773414677))*(x556)))+(((IkReal(0.706677014479576))*(x582)))+(((IkReal(0.706670580809274))*(x583)))+(x572)+(x560)+(((IkReal(0.000834381001758723))*(x585))));
evalcond[6]=((((IkReal(-1.00000000000000))*(x555)*(x566)))+(((IkReal(-1.00000000000000))*(new_r10)*(x577)))+(((IkReal(0.000832967418447589))*(x555)))+(((IkReal(-0.000864045278850941))*(x583)))+(((IkReal(0.000864037412481531))*(x582)))+(x570)+(((IkReal(0.000832959835014659))*(x556)))+(((IkReal(0.707108981466304))*(x585))));
evalcond[7]=((((IkReal(-0.000864037412481531))*(x583)))+(((x556)*(x566)))+(((IkReal(-0.000832967418447589))*(x556)))+(((IkReal(-1.00000000000000))*(new_r11)*(x577)))+(((IkReal(-0.000864045278850941))*(x582)))+(x559)+(((IkReal(0.000832959835014659))*(x555)))+(((IkReal(0.707108981466304))*(x584))));
evalcond[8]=((((new_r20)*(x564)))+(((new_r20)*(x561)))+(((IkReal(-1.00000000000000))*(x573)*(x574)))+(((IkReal(-1.00000000000000))*(x573)*(x575)))+(((new_r10)*(sj1)*(x563)))+(((IkReal(-1.00000000000000))*(x570)*(x576)))+(((IkReal(-1.00000000000000))*(x558)*(x569)))+(((IkReal(-1.00000000000000))*(x565)*(x574)))+(((IkReal(-1.00000000000000))*(x579)))+(x578)+(((IkReal(-1.00000000000000))*(x567)*(x569)))+(((x570)*(x571))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x559)*(x576)))+(((x559)*(x571)))+(((x562)*(x563)))+(((IkReal(-0.00117999830033167))*(cj2)*(x562)))+(((IkReal(-1.00000000000000))*(x560)*(x575)))+(((IkReal(-1.00000000000000))*(x560)*(x574)))+(((IkReal(-1.00000000000000))*(x557)*(x567)))+(((new_r21)*(x564)))+(((new_r21)*(x561)))+(((IkReal(-1.00000000000000))*(x586)))+(((IkReal(-1.00000000000000))*(x557)*(x558))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}

} else
{
{
IkReal j0array[1], cj0array[1], sj0array[1];
bool j0valid[1]={false};
_nj0 = 1;
IkReal x587=((new_r21)*(sj1));
IkReal x588=((new_r20)*(sj1));
IkReal x589=((IkReal(0.0247263337103169))*(cj1));
IkReal x590=((IkReal(0.0247265588238043))*(cj1));
if( IKabs(((gconst6)*(((((IkReal(0.000862672957388891))*(x587)))+(((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((IkReal(-1.00000000000000))*(new_r20)*(x589)))+(((new_r21)*(x590)))+(((IkReal(-0.000862665103513256))*(x588))))))) < IKFAST_ATAN2_MAGTHRESH && IKabs(((gconst6)*(((((IkReal(0.000862672957388891))*(x588)))+(((new_r21)*(x589)))+(((IkReal(-0.706670582485847))*(new_r20)))+(((new_r20)*(x590)))+(((IkReal(0.706677016156165))*(new_r21)))+(((IkReal(0.000862665103513256))*(x587))))))) < IKFAST_ATAN2_MAGTHRESH )
    continue;
j0array[0]=IKatan2(((gconst6)*(((((IkReal(0.000862672957388891))*(x587)))+(((IkReal(-0.706670582485847))*(new_r21)))+(((IkReal(-0.706677016156165))*(new_r20)))+(((IkReal(-1.00000000000000))*(new_r20)*(x589)))+(((new_r21)*(x590)))+(((IkReal(-0.000862665103513256))*(x588)))))), ((gconst6)*(((((IkReal(0.000862672957388891))*(x588)))+(((new_r21)*(x589)))+(((IkReal(-0.706670582485847))*(new_r20)))+(((new_r20)*(x590)))+(((IkReal(0.706677016156165))*(new_r21)))+(((IkReal(0.000862665103513256))*(x587)))))));
sj0array[0]=IKsin(j0array[0]);
cj0array[0]=IKcos(j0array[0]);
if( j0array[0] > IKPI )
{
    j0array[0]-=IK2PI;
}
else if( j0array[0] < -IKPI )
{    j0array[0]+=IK2PI;
}
j0valid[0] = true;
for(int ij0 = 0; ij0 < 1; ++ij0)
{
if( !j0valid[ij0] )
{
    continue;
}
_ij0[0] = ij0; _ij0[1] = -1;
for(int iij0 = ij0+1; iij0 < 1; ++iij0)
{
if( j0valid[iij0] && IKabs(cj0array[ij0]-cj0array[iij0]) < IKFAST_SOLUTION_THRESH && IKabs(sj0array[ij0]-sj0array[iij0]) < IKFAST_SOLUTION_THRESH )
{
    j0valid[iij0]=false; _ij0[1] = iij0; break; 
}
}
j0 = j0array[ij0]; cj0 = cj0array[ij0]; sj0 = sj0array[ij0];
{
IkReal evalcond[10];
IkReal x591=IKsin(j0);
IkReal x592=IKcos(j0);
IkReal x593=((cj1)*(new_r11));
IkReal x594=((IkReal(0.999387668812801))*(cj2));
IkReal x595=((cj2)*(new_r01));
IkReal x596=((new_r01)*(sj2));
IkReal x597=((IkReal(0.0349684756605290))*(cj1));
IkReal x598=((new_r11)*(sj1));
IkReal x599=((IkReal(0.999998559603112))*(sj2));
IkReal x600=((IkReal(0.00121999824271580))*(sj1));
IkReal x601=((cj2)*(new_r10));
IkReal x602=((IkReal(0.707102543863324))*(sj1));
IkReal x603=((IkReal(0.00122193898950495))*(sj2));
IkReal x604=((IkReal(0.00117798845789884))*(sj2));
IkReal x605=((cj1)*(new_r10));
IkReal x606=((cj2)*(new_r00));
IkReal x607=((IkReal(0.00122193898950495))*(cj1));
IkReal x608=((cj2)*(new_r11));
IkReal x609=((new_r00)*(sj2));
IkReal x610=((IkReal(0.00117999830033167))*(sj1));
IkReal x611=((IkReal(0.999387668812801))*(cj1));
IkReal x612=((IkReal(0.999998559603112))*(sj1));
IkReal x613=((IkReal(1.00000000000000))*(sj2));
IkReal x614=((IkReal(0.707103562373095))*(x591));
IkReal x615=((IkReal(0.707109999985348))*(x592));
IkReal x616=((IkReal(0.707109999985348))*(x591));
IkReal x617=((IkReal(0.707103562373095))*(x592));
IkReal x618=((cj1)*(x591));
IkReal x619=((cj1)*(x592));
IkReal x620=((sj1)*(x591));
IkReal x621=((sj1)*(x592));
IkReal x622=((x616)+(x617));
evalcond[0]=((((IkReal(0.0349699160554654))*(x601)))+(((IkReal(0.0349699160554654))*(x609)))+(((IkReal(-1.00000000000000))*(new_r10)*(x604)))+(((IkReal(0.999387671183844))*(new_r20)))+(((IkReal(0.00117798845789884))*(x606)))+(x622));
evalcond[1]=((((IkReal(0.0349699160554654))*(x608)))+(((IkReal(-1.00000000000000))*(new_r11)*(x604)))+(((IkReal(0.00117798845789884))*(x595)))+(((IkReal(0.0349699160554654))*(x596)))+(((IkReal(0.999387671183844))*(new_r21)))+(((IkReal(-1.00000000000000))*(x615)))+(x614));
evalcond[2]=((((IkReal(0.000862665103513256))*(x620)))+(((IkReal(0.0247263337103169))*(x618)))+(((IkReal(-0.000862672957388891))*(x621)))+(((IkReal(-0.0247265588238043))*(x619)))+(new_r20)+(((IkReal(0.706670582485847))*(x592)))+(((IkReal(0.706677016156165))*(x591))));
evalcond[3]=((((IkReal(-0.0247263337103169))*(x619)))+(((IkReal(-0.000862672957388891))*(x620)))+(((IkReal(-0.0247265588238043))*(x618)))+(((IkReal(-0.000862665103513256))*(x621)))+(new_r21)+(((IkReal(0.706670582485847))*(x591)))+(((IkReal(-0.706677016156165))*(x592))));
evalcond[4]=((((IkReal(0.706677014479576))*(x619)))+(((IkReal(0.000834388598130239))*(x621)))+(((IkReal(0.0247273522187076))*(x592)))+(((IkReal(-0.706670580809274))*(x618)))+(((IkReal(0.0247275773414677))*(x591)))+(x601)+(x609)+(((IkReal(-0.000834381001758723))*(x620))));
evalcond[5]=((((IkReal(-0.0247275773414677))*(x592)))+(((IkReal(0.706677014479576))*(x618)))+(((IkReal(0.000834388598130239))*(x620)))+(((IkReal(0.0247273522187076))*(x591)))+(((IkReal(0.000834381001758723))*(x621)))+(x596)+(x608)+(((IkReal(0.706670580809274))*(x619))));
evalcond[6]=((((IkReal(0.707108981466304))*(x621)))+(((IkReal(-1.00000000000000))*(new_r10)*(x613)))+(((IkReal(0.000832967418447589))*(x591)))+(((IkReal(0.000832959835014659))*(x592)))+(((IkReal(0.000864037412481531))*(x618)))+(((IkReal(-1.00000000000000))*(x591)*(x602)))+(((IkReal(-0.000864045278850941))*(x619)))+(x606));
evalcond[7]=((((IkReal(0.707108981466304))*(x620)))+(((x592)*(x602)))+(((IkReal(-1.00000000000000))*(new_r11)*(x613)))+(((IkReal(0.000832959835014659))*(x591)))+(((IkReal(-0.000864037412481531))*(x619)))+(x595)+(((IkReal(-0.000864045278850941))*(x618)))+(((IkReal(-0.000832967418447589))*(x592))));
evalcond[8]=((((IkReal(-1.00000000000000))*(x603)*(x605)))+(((IkReal(-1.00000000000000))*(x609)*(x611)))+(((IkReal(-1.00000000000000))*(x609)*(x610)))+(((new_r10)*(sj1)*(x599)))+(((new_r20)*(x600)))+(((x606)*(x607)))+(((new_r20)*(x597)))+(((IkReal(-1.00000000000000))*(x606)*(x612)))+(((IkReal(-1.00000000000000))*(x615)))+(x614)+(((IkReal(-1.00000000000000))*(x594)*(x605)))+(((IkReal(-1.00000000000000))*(x601)*(x610))));
evalcond[9]=((((IkReal(-1.00000000000000))*(x595)*(x612)))+(((new_r21)*(x600)))+(((IkReal(-1.00000000000000))*(x593)*(x603)))+(((x598)*(x599)))+(((x595)*(x607)))+(((IkReal(-1.00000000000000))*(x622)))+(((IkReal(-0.00117999830033167))*(cj2)*(x598)))+(((IkReal(-1.00000000000000))*(x596)*(x611)))+(((IkReal(-1.00000000000000))*(x596)*(x610)))+(((IkReal(-1.00000000000000))*(x593)*(x594)))+(((new_r21)*(x597))));
if( IKabs(evalcond[0]) > 0.000001  || IKabs(evalcond[1]) > 0.000001  || IKabs(evalcond[2]) > 0.000001  || IKabs(evalcond[3]) > 0.000001  || IKabs(evalcond[4]) > 0.000001  || IKabs(evalcond[5]) > 0.000001  || IKabs(evalcond[6]) > 0.000001  || IKabs(evalcond[7]) > 0.000001  || IKabs(evalcond[8]) > 0.000001  || IKabs(evalcond[9]) > 0.000001  )
{
continue;
}
}

{
std::vector<IkSingleDOFSolutionBase<IkReal> > vinfos(6);
vinfos[0].jointtype = 1;
vinfos[0].foffset = j0;
vinfos[0].indices[0] = _ij0[0];
vinfos[0].indices[1] = _ij0[1];
vinfos[0].maxsolutions = _nj0;
vinfos[1].jointtype = 1;
vinfos[1].foffset = j1;
vinfos[1].indices[0] = _ij1[0];
vinfos[1].indices[1] = _ij1[1];
vinfos[1].maxsolutions = _nj1;
vinfos[2].jointtype = 1;
vinfos[2].foffset = j2;
vinfos[2].indices[0] = _ij2[0];
vinfos[2].indices[1] = _ij2[1];
vinfos[2].maxsolutions = _nj2;
vinfos[3].jointtype = 1;
vinfos[3].foffset = j3;
vinfos[3].indices[0] = _ij3[0];
vinfos[3].indices[1] = _ij3[1];
vinfos[3].maxsolutions = _nj3;
vinfos[4].jointtype = 1;
vinfos[4].foffset = j4;
vinfos[4].indices[0] = _ij4[0];
vinfos[4].indices[1] = _ij4[1];
vinfos[4].maxsolutions = _nj4;
vinfos[5].jointtype = 1;
vinfos[5].foffset = j5;
vinfos[5].indices[0] = _ij5[0];
vinfos[5].indices[1] = _ij5[1];
vinfos[5].maxsolutions = _nj5;
std::vector<int> vfree(0);
solutions.AddSolution(vinfos,vfree);
}
}
}

}

}
}
}

}

}
}
}
}
}};


/// solves the inverse kinematics equations.
/// \param pfree is an array specifying the free joints of the chain.
IKFAST_API bool ComputeIk(const IkReal* eetrans, const IkReal* eerot, const IkReal* pfree, IkSolutionListBase<IkReal>& solutions) {
IKSolver solver;
return solver.ComputeIk(eetrans,eerot,pfree,solutions);
}

IKFAST_API const char* GetKinematicsHash() { return "<robot:GenericRobot - raw3-1 (8df6fc5ac255e425485ccd98eaab2f5d)>"; }

IKFAST_API const char* GetIkFastVersion() { return IKFAST_STRINGIZE(IKFAST_VERSION); }

#ifdef IKFAST_NAMESPACE
} // end namespace
#endif

#ifndef IKFAST_NO_MAIN
#include <stdio.h>
#include <stdlib.h>
#ifdef IKFAST_NAMESPACE
using namespace IKFAST_NAMESPACE;
#endif
int main(int argc, char** argv)
{
    if( argc != 12+GetNumFreeParameters()+1 ) {
        printf("\nUsage: ./ik r00 r01 r02 t0 r10 r11 r12 t1 r20 r21 r22 t2 free0 ...\n\n"
               "Returns the ik solutions given the transformation of the end effector specified by\n"
               "a 3x3 rotation R (rXX), and a 3x1 translation (tX).\n"
               "There are %d free parameters that have to be specified.\n\n",GetNumFreeParameters());
        return 1;
    }

    IkSolutionList<IkReal> solutions;
    std::vector<IkReal> vfree(GetNumFreeParameters());
    IkReal eerot[9],eetrans[3];
    eerot[0] = atof(argv[1]); eerot[1] = atof(argv[2]); eerot[2] = atof(argv[3]); eetrans[0] = atof(argv[4]);
    eerot[3] = atof(argv[5]); eerot[4] = atof(argv[6]); eerot[5] = atof(argv[7]); eetrans[1] = atof(argv[8]);
    eerot[6] = atof(argv[9]); eerot[7] = atof(argv[10]); eerot[8] = atof(argv[11]); eetrans[2] = atof(argv[12]);
    for(std::size_t i = 0; i < vfree.size(); ++i)
        vfree[i] = atof(argv[13+i]);
    bool bSuccess = ComputeIk(eetrans, eerot, vfree.size() > 0 ? &vfree[0] : NULL, solutions);

    if( !bSuccess ) {
        fprintf(stderr,"Failed to get ik solution\n");
        return -1;
    }

    printf("Found %d ik solutions:\n", (int)solutions.GetNumSolutions());
    std::vector<IkReal> solvalues(GetNumJoints());
    for(std::size_t i = 0; i < solutions.GetNumSolutions(); ++i) {
        const IkSolutionBase<IkReal>& sol = solutions.GetSolution(i);
        printf("sol%d (free=%d): ", (int)i, (int)sol.GetFree().size());
        std::vector<IkReal> vsolfree(sol.GetFree().size());
        sol.GetSolution(&solvalues[0],vsolfree.size()>0?&vsolfree[0]:NULL);
        for( std::size_t j = 0; j < solvalues.size(); ++j)
            printf("%.15f, ", solvalues[j]);
        printf("\n");
    }
    return 0;
}

#endif
